.版本 2

.程序集 通知系统
.程序集变量 通知, 通知, , "0"
.程序集变量 文字精灵, Age_文字
.程序集变量 坐标, 整数型
.程序集变量 计时, 小数型
.程序集变量 步骤, 整数型
.程序集变量 透明度, 整数型
.程序集变量 显示标题, 文本型
.程序集变量 显示内容, 文本型

.子程序 通知系统初始化

文字精灵.创建 (“黑体”, 15 × 分辨率缩放倍率, 假, 假, 真, #颜色_白)

.子程序 通知系统逻辑
.局部变量 n, 整数型

.计次循环首 (取数组成员数 (通知), n)
    .如果真 (通知 [n].自动换行处理 ＝ 假)
        通知 [n].标题 ＝ 自动换行 (通知 [n].标题)
        通知 [n].文字 ＝ 自动换行 (通知 [n].文字)
        通知 [n].自动换行处理 ＝ 真
    .如果真结束

.计次循环尾 ()
.如果 (取数组成员数 (通知) ≠ 0)

    .如果 (步骤 ＝ 0)
        显示标题 ＝ 通知 [1].标题
        显示内容 ＝ 通知 [1].文字
        透明度 ＝ 透明度 ＋ (255 － 透明度) × 0.2
        坐标 ＝ 坐标 ＋ (50 － 坐标) × 0.2
        .如果 (计时 ≥ 3)
            步骤 ＝ 步骤 ＋ 1
        .否则
            计时 ＝ 计时 ＋ 引擎.取最后帧时间 ()
        .如果结束

    .否则

    .如果结束
    .如果真 (步骤 ＝ 1)
        .如果 (透明度 － 帧率数据处理 (10) ≤ 0)
            透明度 ＝ 0
            步骤 ＝ 0
            坐标 ＝ 0
            计时 ＝ 0
            删除成员 (通知, 1, 1)
        .否则
            透明度 ＝ 透明度 － 帧率数据处理 (10)
        .如果结束

    .如果真结束

.否则

.如果结束


.子程序 加入通知
.参数 标题, 文本型
.参数 内容, 文本型
.局部变量 临时通知, 通知

临时通知.标题 ＝ 标题
临时通知.文字 ＝ 内容
加入成员 (通知, 临时通知)

.子程序 通知系统渲染

引擎.画实心矩形 (0, 0 ＋ 坐标 × 分辨率缩放倍率, 400 × 分辨率缩放倍率, (25 ＋ 16 × 取内容段数 (显示标题) ＋ 16 × 取内容段数 (显示内容) ＋ 坐标) × 分辨率缩放倍率, ARGB (透明度 × 0.8, 26, 97, 203))
文字精灵.置透明度 (透明度)
文字精灵.显示 (20 × 分辨率缩放倍率, (坐标 ＋ 5) × 分辨率缩放倍率, 显示标题)
文字精灵.显示 (20 × 分辨率缩放倍率, (坐标 ＋ 15 ＋ 16 × 取内容段数 (显示标题)) × 分辨率缩放倍率, 显示内容)

.子程序 取内容段数, 整数型
.参数 内容, 文本型
.局部变量 文本, 文本型, , "0"

文本 ＝ 分割文本 (内容, #换行符, )
返回 (取数组成员数 (文本))

.子程序 自动换行, 文本型
.参数 文字, 文本型
.局部变量 文本, 文本型, , "0"
.局部变量 n, 整数型
.局部变量 n2, 整数型
.局部变量 文本处理, 文本型
.局部变量 循环次数, 整数型
.局部变量 取字符数, 整数型
.局部变量 目标长度, 整数型
.局部变量 字符位置, 整数型
.局部变量 字计数, 整数型

文本 ＝ 分割文本 (文字, #换行符, )
.计次循环首 (取数组成员数 (文本), n)
    目标长度 ＝ 取文本长度_高级 (文本 [n])
    加入控制台文本 (文本 [n])
    字符位置 ＝ 0
    字计数 ＝ 0
    文本处理 ＝ “”
    .判断循环首 (字符位置 ＜ 目标长度)
        字符位置 ＝ 字符位置 ＋ 1
        文本处理 ＝ 文本处理 ＋ 取文本中间_高级 (文本 [n], 字符位置, 1)

        字计数 ＝ 字计数 ＋ 取文本长度 (取文本中间_高级 (文本 [n], 字符位置, 1))
        .如果真 (字计数 ≥ 48)
            文本处理 ＝ 文本处理 ＋ #换行符
            字计数 ＝ 0
        .如果真结束

    .判断循环尾 ()
    文本 [n] ＝ 文本处理



.计次循环尾 ()
文本处理 ＝ “”
.计次循环首 (取数组成员数 (文本), n)

    .如果 (n ＝ 1)
        文本处理 ＝ 文本处理 ＋ 文本 [n]
    .否则
        文本处理 ＝ 文本处理 ＋ #换行符 ＋ 文本 [n]
    .如果结束

.计次循环尾 ()
返回 (文本处理)
