.版本 2

.程序集 设置界面
.程序集变量 背景精灵, Age_精灵
.程序集变量 边栏精灵, Age_精灵
.程序集变量 选中边栏精灵, Age_精灵
.程序集变量 后退箭头, 缩放按钮类
.程序集变量 选择钮文字, Age_文字
.程序集变量 选择钮未选中纹理, 整数型
.程序集变量 选择钮选中纹理, 整数型
.程序集变量 选择钮精灵, Age_精灵
.程序集变量 按钮滑动偏移, 整数型
.程序集变量 按钮滑动偏移设定, 整数型
.程序集变量 按钮滑动尽头, 整数型
.程序集变量 按钮透明度, 整数型
.程序集变量 按钮页面, 整数型
.程序集变量 边栏位移, 小数型
.程序集变量 边栏选中项, 整数型
.程序集变量 通用文字, Age_文字
.程序集变量 十五号文字, Age_文字
.程序集变量 关于界面兔子LOGO精灵, Age_精灵
.程序集变量 AGE引擎LOGO精灵, Age_精灵
.程序集变量 选中特效, 设置界面选中特效, , "0"
.程序集变量 OFFSET节拍, 逻辑型
.程序集变量 节拍计数, 整数型
.程序集变量 节拍音效, 整数型
.程序集变量 输入框, Age_输入框
.程序集变量 黑色背景, Age_精灵
.程序集变量 黑色背景透明度, 整数型
.程序集变量 输入框开关, 逻辑型
.程序集变量 OFFSET滑块选中, 逻辑型
.程序集变量 OFFSET滑块数值, 整数型
.程序集变量 滑块坐标, 整数型
.程序集变量 侧滑块, Age_精灵
.程序集变量 鼠标滑动锁定, 逻辑型
.程序集变量 鼠标记录点2, 整数型
.程序集变量 鼠标记录点, 整数型
.程序集变量 滑块坐标2, 整数型
.程序集变量 鼠标左键计时, 小数型
.程序集变量 鼠标左键选项, 整数型
.程序集变量 全局滑块, Age_精灵
.程序集变量 滑块背景透明度, 整数型
.程序集变量 全局音量方盒, Age_方盒
.程序集变量 音乐音量方盒, Age_方盒
.程序集变量 音效音量方盒, Age_方盒
.程序集变量 Offset滑块方盒, Age_方盒
.程序集变量 边栏选中项大小类型, 整数型
.程序集变量 标题字体1, Age_文字
.程序集变量 标题字体2, Age_文字
.程序集变量 鼠标所在项, 整数型
.程序集变量 鼠标边栏位移, 小数型

.子程序 设置界面初始化

按钮设定对话框初始化 ()
按钮滑动尽头 ＝ 0
边栏位移 ＝ 100
按钮透明度 ＝ 255
选项音效开 ＝ BASS_StreamCreateFile (假, 取运行目录 () ＋ “\Sound\Open.wav”, 0, 0, 40000)
选项音效关 ＝ BASS_StreamCreateFile (假, 取运行目录 () ＋ “\Sound\Close.wav”, 0, 0, 40000)
引擎.读zip (取运行目录 () ＋ “\UI.pak”, “”)
全局滑块.创建 (引擎.读纹理 (“滑块白.png”))
全局滑块.置中心 (全局滑块.取宽度 () ÷ 2, 全局滑块.取高度 () ÷ 2)
背景精灵.创建 (引擎.读纹理 (“SETT.png”))
边栏精灵.创建 (引擎.读纹理 (“SETTB.png”))
选中边栏精灵.创建 (引擎.读纹理 (“SETTXZ.png”))
关于界面兔子LOGO精灵.创建 (引擎.读纹理 (“About2.png”))
AGE引擎LOGO精灵.创建 (引擎.读纹理 (“age.png”))
后退箭头.精灵.创建 (引擎.读纹理 (“后退箭头.png”))
选择钮未选中纹理 ＝ 引擎.读纹理 (“选择钮.png”)
选择钮选中纹理 ＝ 引擎.读纹理 (“选择钮选中.png”)
选择钮文字.创建 (“黑体”, 25 × 分辨率缩放倍率, 假, 假, 真, #颜色_白)
通用文字.创建 (“黑体”, 50 × 分辨率缩放倍率, 假, 假, 真, #颜色_白)
十五号文字.创建 (“黑体”, 15 × 分辨率缩放倍率, 假, 假, 真, #颜色_白)
选择钮精灵.创建 (选择钮未选中纹理)
黑色背景.创建 (引擎.读纹理_字节集 (#遮罩), , , )
输入框.创建 (380, #颜色_白, “宋体”, 25, 假, 假, 假)
侧滑块.创建 (引擎.读纹理 (“滑块.png”))

标题字体1.创建 (“微软雅黑”, 30 × 分辨率缩放倍率, 假, 假, 真)
标题字体2.创建 (“微软雅黑”, 20 × 分辨率缩放倍率, 假, 假, 真)
全局音量方盒.创建 (0, 0, 20, 20, 0, 10, 10, 分辨率缩放倍率, 分辨率缩放倍率)
音乐音量方盒.创建 (0, 0, 20, 20, 0, 10, 10, 分辨率缩放倍率, 分辨率缩放倍率)
音效音量方盒.创建 (0, 0, 20, 20, 0, 10, 10, 分辨率缩放倍率, 分辨率缩放倍率)
Offset滑块方盒.创建 (0, 0, 20, 20, 0, 10, 10, 分辨率缩放倍率, 分辨率缩放倍率)

背景精灵.置混合模式 (#混合_默认)
边栏精灵.置混合模式 (#混合_默认)
选中边栏精灵.置混合模式 (#混合_默认)
后退箭头.精灵.置混合模式 (#混合_默认)
关于界面兔子LOGO精灵.置混合模式 (#混合_默认)
AGE引擎LOGO精灵.置混合模式 (#混合_默认)
选择钮精灵.置混合模式 (#混合_默认)
黑色背景.置混合模式 (#混合_默认)
全局滑块.置混合模式 (#混合_默认)

后退箭头.精灵.置中心 (后退箭头.精灵.取宽度 () ÷ 2, 后退箭头.精灵.取高度 () ÷ 2)

节拍音效 ＝ BASS_StreamCreateFile (假, 取运行目录 () ＋ “\Sound\normal-slidertick.wav”, 0, 0, 40000)

.子程序 设置界面实时音量设定

BASS_ChannelSetAttribute (节拍音效, 2, 音效音量 ÷ 100 × 全局音量 ÷ 100)

.子程序 设置界面逻辑

读取进度及判断 ()
黑色背景逻辑 ()
.如果 (更换按键事件 ＝ 假)
    设置界面鼠标按键逻辑 ()
    滑动逻辑 ()
    选项逻辑 ()
    边栏逻辑 ()
    选中特效逻辑 ()
    OFFSET音效 ()
    滑块逻辑 ()
.否则
    更换按键逻辑 ()
.如果结束


.子程序 滑块逻辑
.局部变量 全局音量滑块, 逻辑型, 静态
.局部变量 音乐音量滑块, 逻辑型, 静态
.局部变量 音效音量滑块, 逻辑型, 静态
.局部变量 Offset滑块, 逻辑型, 静态

.如果真 (按钮页面 ＝ 2)


    .如果 (Offset滑块方盒.检测点 (鼠标坐标.x, 鼠标坐标.y))
        .如果 (引擎.键_取按下 (#鼠标左键))
            Offset滑块 ＝ 真
        .否则

        .如果结束

    .否则

    .如果结束
    .如果真 (Offset滑块 ＝ 真)
        .如果 (鼠标坐标.x ≤ 500 × 分辨率缩放倍率)
            全局OFFSET ＝ -1
        .否则
            .如果 (鼠标坐标.x ≥ 700 × 分辨率缩放倍率)
                全局OFFSET ＝ 1
            .否则
                全局OFFSET ＝ (鼠标坐标.x － 600 × 分辨率缩放倍率) ÷ (100 × 分辨率缩放倍率)
            .如果结束

        .如果结束
        写配置项 (取运行目录 () ＋ “\Config.ini”, “Game”, “Offset”, 到文本 (全局OFFSET))
    .如果真结束

    .如果 (全局音量方盒.检测点 (鼠标坐标.x, 鼠标坐标.y))
        .如果 (引擎.键_取按下 (#鼠标左键))
            全局音量滑块 ＝ 真
        .否则

        .如果结束

    .否则

    .如果结束
    .如果真 (全局音量滑块 ＝ 真)
        .如果 (鼠标坐标.x ≤ 450 × 分辨率缩放倍率)
            全局音量 ＝ 0
        .否则
            .如果 (鼠标坐标.x ≥ 650 × 分辨率缩放倍率)
                全局音量 ＝ 100
            .否则
                全局音量 ＝ (鼠标坐标.x － 450 × 分辨率缩放倍率) ÷ (2 × 分辨率缩放倍率)
            .如果结束

        .如果结束
        写配置项 (取运行目录 () ＋ “\Config.ini”, “Game”, “Volume”, 到文本 (全局音量))

    .如果真结束


    .如果 (音乐音量方盒.检测点 (鼠标坐标.x, 鼠标坐标.y))
        .如果 (引擎.键_取按下 (#鼠标左键))
            音乐音量滑块 ＝ 真
        .否则

        .如果结束

    .否则

    .如果结束
    .如果真 (音乐音量滑块 ＝ 真)
        .如果 (鼠标坐标.x ≤ 450 × 分辨率缩放倍率)
            音乐音量 ＝ 0
        .否则
            .如果 (鼠标坐标.x ≥ 650 × 分辨率缩放倍率)
                音乐音量 ＝ 100
            .否则
                音乐音量 ＝ (鼠标坐标.x － 450 × 分辨率缩放倍率) ÷ (2 × 分辨率缩放倍率)
            .如果结束

        .如果结束
        写配置项 (取运行目录 () ＋ “\Config.ini”, “Game”, “MVolume”, 到文本 (音乐音量))
    .如果真结束


    .如果 (音效音量方盒.检测点 (鼠标坐标.x, 鼠标坐标.y))
        .如果 (引擎.键_取按下 (#鼠标左键))
            音效音量滑块 ＝ 真
        .否则

        .如果结束

    .否则

    .如果结束
    .如果真 (音效音量滑块 ＝ 真)
        .如果 (鼠标坐标.x ≤ 450 × 分辨率缩放倍率)
            音效音量 ＝ 0
        .否则
            .如果 (鼠标坐标.x ≥ 650 × 分辨率缩放倍率)
                音效音量 ＝ 100
            .否则
                音效音量 ＝ (鼠标坐标.x － 450 × 分辨率缩放倍率) ÷ (2 × 分辨率缩放倍率)
            .如果结束

        .如果结束
        写配置项 (取运行目录 () ＋ “\Config.ini”, “Game”, “SVolume”, 到文本 (音效音量))
    .如果真结束

    全局音量方盒.置位置 ((450 ＋ 2 × 全局音量) × 分辨率缩放倍率, 170 × 分辨率缩放倍率 ＋ 按钮滑动偏移)
    音乐音量方盒.置位置 ((450 ＋ 2 × 音乐音量) × 分辨率缩放倍率, 220 × 分辨率缩放倍率 ＋ 按钮滑动偏移)
    音效音量方盒.置位置 ((450 ＋ 2 × 音效音量) × 分辨率缩放倍率, 270 × 分辨率缩放倍率 ＋ 按钮滑动偏移)
    Offset滑块方盒.置位置 (全局OFFSET × 100 × 分辨率缩放倍率 ＋ 600 × 分辨率缩放倍率, 370 × 分辨率缩放倍率 ＋ 按钮滑动偏移)
    .如果真 (引擎.键_取弹起 (#鼠标左键))
        全局音量滑块 ＝ 假
        音乐音量滑块 ＝ 假
        音效音量滑块 ＝ 假
        Offset滑块 ＝ 假
    .如果真结束

.如果真结束


.子程序 选中特效逻辑
.局部变量 n, 整数型

.计次循环首 (取数组成员数 (选中特效), n)
    .如果 (n ＞ 取数组成员数 (选中特效))

    .否则
        .如果 (选中特效 [n].透明度 ＝ 0)
            删除成员 (选中特效, n, 1)
        .否则
            .如果 (选中特效 [n].透明度 － 帧率数据处理 (10) ≤ 0)
                选中特效 [n].透明度 ＝ 0
            .否则
                选中特效 [n].透明度 ＝ 选中特效 [n].透明度 － 帧率数据处理 (10)
            .如果结束

        .如果结束

    .如果结束

.计次循环尾 ()




.子程序 OFFSET音效
.局部变量 计时, 整数型
.局部变量 计数, 整数型, 静态
.局部变量 暂停计时, 小数型, 静态
.局部变量 闪烁计数, 整数型, 静态

计时 ＝ (BASS_ChannelBytes2Seconds (播放句柄, BASS_ChannelGetPosition (播放句柄, 0)) ＋ OFFSET ＋ 全局OFFSET) × 1000 ÷ (60000 ÷ MP3的BPM)
.如果 (计数 ＝ 计时)

.否则
    .如果 (OFFSET节拍 ＝ 真)
        .如果 (节拍计数 ＝ 4)
            节拍计数 ＝ 1
        .否则
            节拍计数 ＝ 节拍计数 ＋ 1
        .如果结束
        BASS_ChannelPlay (节拍音效, 真)
    .否则

    .如果结束
    计数 ＝ 计时
.如果结束


.子程序 边栏逻辑
.局部变量 判断, 整数型, 静态
.局部变量 鼠标边栏加速度, 公式类
.局部变量 位移差值, 小数型
.局部变量 按钮音效播放, 整数型, 静态




.判断开始 (判断是否进入区域 (0 × 分辨率缩放倍率, 150 × 分辨率缩放倍率, 100 × 分辨率缩放倍率, 140 × 分辨率缩放倍率) ＝ 真)
    .如果真 (引擎.键_取按下 (#鼠标左键))
        边栏选中项 ＝ 0
        按钮滑动尽头 ＝ 0 × 分辨率缩放倍率
        BASS_ChannelPlay (菜单打开音效, 真)
    .如果真结束
    .如果真 (按钮音效播放 ≠ 1)
        按钮音效播放 ＝ 1
        BASS_ChannelPlay (按钮触碰音效, 真)
    .如果真结束

.判断 (判断是否进入区域 (0 × 分辨率缩放倍率, 150 × 分辨率缩放倍率, 150 × 分辨率缩放倍率, 190 × 分辨率缩放倍率) ＝ 真)
    .如果真 (引擎.键_取按下 (#鼠标左键))
        边栏选中项 ＝ 1
        按钮滑动尽头 ＝ 260 × 分辨率缩放倍率
        BASS_ChannelPlay (菜单打开音效, 真)
    .如果真结束
    .如果真 (按钮音效播放 ≠ 2)
        按钮音效播放 ＝ 2
        BASS_ChannelPlay (按钮触碰音效, 真)
    .如果真结束

.判断 (判断是否进入区域 (0 × 分辨率缩放倍率, 150 × 分辨率缩放倍率, 200 × 分辨率缩放倍率, 240 × 分辨率缩放倍率) ＝ 真)
    .如果真 (引擎.键_取按下 (#鼠标左键))
        边栏选中项 ＝ 2
        按钮滑动尽头 ＝ 0 × 分辨率缩放倍率
        BASS_ChannelPlay (菜单打开音效, 真)
    .如果真结束
    .如果真 (按钮音效播放 ≠ 3)
        按钮音效播放 ＝ 3
        BASS_ChannelPlay (按钮触碰音效, 真)
    .如果真结束

.判断 (判断是否进入区域 (0 × 分辨率缩放倍率, 150 × 分辨率缩放倍率, 250 × 分辨率缩放倍率, 290 × 分辨率缩放倍率) ＝ 真)
    .如果真 (引擎.键_取按下 (#鼠标左键))
        边栏选中项 ＝ 3
        按钮滑动尽头 ＝ 0 × 分辨率缩放倍率
        BASS_ChannelPlay (菜单打开音效, 真)
    .如果真结束
    .如果真 (按钮音效播放 ≠ 4)
        按钮音效播放 ＝ 4
        BASS_ChannelPlay (按钮触碰音效, 真)
    .如果真结束


.判断 (判断是否进入区域 (0 × 分辨率缩放倍率, 150 × 分辨率缩放倍率, 300 × 分辨率缩放倍率, 340 × 分辨率缩放倍率) ＝ 真)
    .如果真 (引擎.键_取按下 (#鼠标左键))
        边栏选中项 ＝ 4
        .如果 (关于文字行数 × 15 × 分辨率缩放倍率 ＋ 500 × 分辨率缩放倍率 ≥ 分辨率.窗口高度 － 80 × 分辨率缩放倍率)
            按钮滑动尽头 ＝ 关于文字行数 × 15 × 分辨率缩放倍率 ＋ 500 × 分辨率缩放倍率 － (分辨率.窗口高度 － 80 × 分辨率缩放倍率)
        .否则
            按钮滑动尽头 ＝ 0
        .如果结束
        BASS_ChannelPlay (菜单打开音效, 真)
    .如果真结束
    .如果真 (按钮音效播放 ≠ 5)
        按钮音效播放 ＝ 5
        BASS_ChannelPlay (按钮触碰音效, 真)
    .如果真结束

.默认
    按钮音效播放 ＝ 0
.判断结束



位移差值 ＝ 边栏位移 － (100 ＋ 边栏选中项 × 50) × 分辨率缩放倍率
边栏位移 ＝ 边栏位移 － 帧率数据处理 (位移差值 × 0.2)



.如果 (按钮页面 ＝ 边栏选中项 且 判断 ≠ 2)
    判断 ＝ 0

.否则
    .如果 (判断 ＝ 0)
        .如果 (边栏选中项 ＞ 按钮页面)
            边栏选中项大小类型 ＝ 1
        .否则
            边栏选中项大小类型 ＝ 0
        .如果结束

        .如果 (边栏选中项大小类型 ＝ 1)
            按钮滑动偏移设定 ＝ -500 × 分辨率缩放倍率
        .否则
            按钮滑动偏移设定 ＝ 500 × 分辨率缩放倍率
        .如果结束
        .如果 (按钮透明度 － 帧率数据处理 (30) ≤ 0)
            按钮透明度 ＝ 0
            判断 ＝ 1
        .否则
            按钮透明度 ＝ 按钮透明度 － 帧率数据处理 (30)
        .如果结束

    .否则

    .如果结束
    .如果 (判断 ＝ 1)
        判断 ＝ 2
        .如果 (边栏选中项大小类型 ＝ 1)
            按钮滑动偏移 ＝ 500 × 分辨率缩放倍率
        .否则
            按钮滑动偏移 ＝ -500 × 分辨率缩放倍率
        .如果结束
        按钮滑动偏移设定 ＝ 0
        按钮页面 ＝ 边栏选中项
    .否则

    .如果结束
    .如果 (判断 ＝ 2)
        .如果 (按钮透明度 ＋ 帧率数据处理 (30) ≥ 255)
            按钮透明度 ＝ 255
            判断 ＝ 0
        .否则
            按钮透明度 ＝ 按钮透明度 ＋ 帧率数据处理 (30)
        .如果结束

    .否则

    .如果结束

.如果结束


.子程序 取设置界面边栏选中项, 整数型

返回 (边栏选中项)

.子程序 设置界面鼠标按键逻辑
.局部变量 加速度, 公式类, 静态

' ESC返回界面
.如果真 (引擎.键_取按下 (暂停按键))
    BASS_ChannelPlay (返回音效, 真)
    遮罩切换_无执行 (“UI”, 20, 假)
.如果真结束

.如果 (判断是否进入区域 (0 × 分辨率缩放倍率, 70 × 分辨率缩放倍率, 0 × 分辨率缩放倍率, 70 × 分辨率缩放倍率) ＝ 真)
    .如果真 (引擎.键_取弹起 (#鼠标左键))
        BASS_ChannelPlay (返回音效, 真)
        遮罩切换_无执行 (“UI”, 20, 假)
    .如果真结束
    .如果 (引擎.键_取选中 (#鼠标左键))
        后退箭头.缩放 ＝ 加速度.加速度公式 (后退箭头.缩放, 900, 0.4, 0.7)
    .否则
        后退箭头.缩放 ＝ 加速度.加速度公式 (后退箭头.缩放, 1000, 0.4, 0.7)
    .如果结束


.否则
    后退箭头.缩放 ＝ 加速度.加速度公式 (后退箭头.缩放, 700, 0.4, 0.7)
.如果结束


.子程序 设置界面渲染

UI显示背景 ()
显示封面 ()
选项渲染 ()
边栏按钮渲染 ()

引擎.画实心矩形 (150 × 分辨率缩放倍率, 0, 180 × 分辨率缩放倍率, 分辨率.窗口高度, ARGB (255, 5, 33, 53))
背景精灵.显示区域 (0, 0, 分辨率.窗口宽度, 147 × 分辨率缩放倍率)
后退箭头.精灵.显示高级 (40 × 分辨率缩放倍率, 35 × 分辨率缩放倍率, 0, 后退箭头.缩放 ÷ 1000 × 分辨率缩放倍率, 后退箭头.缩放 ÷ 1000 × 分辨率缩放倍率)
标题字体1.显示 (70 × 分辨率缩放倍率, 5 × 分辨率缩放倍率, “首选项”)
标题字体2.显示 (70 × 分辨率缩放倍率, 40 × 分辨率缩放倍率, “设定你的游戏”)
输入框背景渲染 ()

.子程序 输入框背景渲染

.如果 (黑色背景透明度 ＝ 0)

.否则
    黑色背景.显示区域 (0, 0, 分辨率.窗口宽度, 分辨率.窗口高度)
    输入框.显示 (0, 0)
.如果结束


.子程序 选项渲染
.局部变量 n, 整数型
.局部变量 选项, 整数型

' 选项特效渲染

.计次循环首 (取数组成员数 (选中特效), n)
    选中边栏精灵.置颜色 (ARGB (选中特效 [n].透明度, 255, 255, 255))
    选中边栏精灵.显示区域 (170 × 分辨率缩放倍率, 选中特效 [n].坐标 × 分辨率缩放倍率 ＋ 按钮滑动偏移, 分辨率.窗口宽度, (选中特效 [n].坐标 ＋ 50) × 分辨率缩放倍率 ＋ 按钮滑动偏移)
.计次循环尾 ()

选择钮文字.置颜色 (ARGB (按钮透明度, 255, 255, 255))
选择钮精灵.置透明度 (按钮透明度)
全局滑块.置透明度 (按钮透明度)
选中边栏精灵.置颜色 (ARGB (按钮透明度, 96, 96, 96))
侧滑块.置透明度 (按钮透明度)
.如果 (按钮透明度 ＞ 100)
    滑块背景透明度 ＝ 100
.否则
    滑块背景透明度 ＝ 按钮透明度
.如果结束

.如果真 (按钮页面 ＝ 0)
    ' 常规选项页面

    引擎.画实心矩形 (170 × 分辨率缩放倍率, 100 × 分辨率缩放倍率 ＋ 按钮滑动偏移, 分辨率.窗口宽度, 150 × 分辨率缩放倍率 ＋ 按钮滑动偏移, ARGB (按钮透明度, 5, 33, 53))
    选择钮文字.显示 (200 × 分辨率缩放倍率, 113 × 分辨率缩放倍率 ＋ 按钮滑动偏移, “游戏”)

    选项 ＝ 1
    选择钮文字.显示 (230 × 分辨率缩放倍率, (108 ＋ 50 × 选项) × 分辨率缩放倍率 ＋ 按钮滑动偏移, “自动模式”)
    .如果 (自动模式 ＝ 真)
        画选择钮 (180 × 分辨率缩放倍率, (100 ＋ 50 × 选项) × 分辨率缩放倍率 ＋ 按钮滑动偏移, 真)
    .否则
        画选择钮 (180 × 分辨率缩放倍率, (100 ＋ 50 × 选项) × 分辨率缩放倍率 ＋ 按钮滑动偏移, 假)
    .如果结束


    选项 ＝ 2
    选择钮文字.显示 (230 × 分辨率缩放倍率, (108 ＋ 50 × 选项) × 分辨率缩放倍率 ＋ 按钮滑动偏移, “LightMod”)
    .如果 (MOD开关.灯光MOD ＝ 真)
        画选择钮 (180 × 分辨率缩放倍率, (100 ＋ 50 × 选项) × 分辨率缩放倍率 ＋ 按钮滑动偏移, 真)
    .否则
        画选择钮 (180 × 分辨率缩放倍率, (100 ＋ 50 × 选项) × 分辨率缩放倍率 ＋ 按钮滑动偏移, 假)
    .如果结束


    选项 ＝ 3
    选择钮文字.显示 (230 × 分辨率缩放倍率, (108 ＋ 50 × 选项) × 分辨率缩放倍率 ＋ 按钮滑动偏移, “红蓝交换”)
    .如果 (MOD开关.红蓝交换 ＝ 真)
        画选择钮 (180 × 分辨率缩放倍率, (100 ＋ 50 × 选项) × 分辨率缩放倍率 ＋ 按钮滑动偏移, 真)
    .否则
        画选择钮 (180 × 分辨率缩放倍率, (100 ＋ 50 × 选项) × 分辨率缩放倍率 ＋ 按钮滑动偏移, 假)
    .如果结束


    选项 ＝ 4
    选择钮文字.显示 (230 × 分辨率缩放倍率, (108 ＋ 50 × 选项) × 分辨率缩放倍率 ＋ 按钮滑动偏移, “低密度模式”)
    .如果 (MOD开关.密度减少 ＝ 真)
        画选择钮 (180 × 分辨率缩放倍率, (100 ＋ 50 × 选项) × 分辨率缩放倍率 ＋ 按钮滑动偏移, 真)
    .否则
        画选择钮 (180 × 分辨率缩放倍率, (100 ＋ 50 × 选项) × 分辨率缩放倍率 ＋ 按钮滑动偏移, 假)
    .如果结束


    选项 ＝ 5
    选择钮文字.显示 (230 × 分辨率缩放倍率, (108 ＋ 50 × 选项) × 分辨率缩放倍率 ＋ 按钮滑动偏移, “欢迎音乐”)
    .如果 (欢迎音乐总开关 ＝ 真)
        画选择钮 (180 × 分辨率缩放倍率, (100 ＋ 50 × 选项) × 分辨率缩放倍率 ＋ 按钮滑动偏移, 真)
    .否则
        画选择钮 (180 × 分辨率缩放倍率, (100 ＋ 50 × 选项) × 分辨率缩放倍率 ＋ 按钮滑动偏移, 假)
    .如果结束


    选项 ＝ 6
    引擎.画实心矩形 (170 × 分辨率缩放倍率, (100 ＋ 50 × 选项) × 分辨率缩放倍率 ＋ 按钮滑动偏移, 分辨率.窗口宽度, (100 ＋ 50 × 选项 ＋ 50) × 分辨率缩放倍率 ＋ 按钮滑动偏移, ARGB (按钮透明度, 5, 33, 53))
    选择钮文字.显示 (200 × 分辨率缩放倍率, (113 ＋ 50 × 选项) × 分辨率缩放倍率 ＋ 按钮滑动偏移, “开发者”)

    选项 ＝ 7
    选择钮文字.显示 (230 × 分辨率缩放倍率, (108 ＋ 50 × 选项) × 分辨率缩放倍率 ＋ 按钮滑动偏移, “调试信息”)
    .如果 (调试信息显示 ＝ 真)
        画选择钮 (180 × 分辨率缩放倍率, (100 ＋ 50 × 选项) × 分辨率缩放倍率 ＋ 按钮滑动偏移, 真)
    .否则
        画选择钮 (180 × 分辨率缩放倍率, (100 ＋ 50 × 选项) × 分辨率缩放倍率 ＋ 按钮滑动偏移, 假)
    .如果结束

    选项 ＝ 选项 ＋ 1
    选择钮文字.显示 (230 × 分辨率缩放倍率, (108 ＋ 50 × 选项) × 分辨率缩放倍率 ＋ 按钮滑动偏移, “播放器模式”)
    .如果 (播放器模式 ＝ 真)
        画选择钮 (180 × 分辨率缩放倍率, (100 ＋ 50 × 选项) × 分辨率缩放倍率 ＋ 按钮滑动偏移, 真)
    .否则
        画选择钮 (180 × 分辨率缩放倍率, (100 ＋ 50 × 选项) × 分辨率缩放倍率 ＋ 按钮滑动偏移, 假)
    .如果结束

.如果真结束
.如果真 (按钮页面 ＝ 1)
    ' 视频选项页面
    引擎.画实心矩形 (170 × 分辨率缩放倍率, 100 × 分辨率缩放倍率 ＋ 按钮滑动偏移, 分辨率.窗口宽度, 150 × 分辨率缩放倍率 ＋ 按钮滑动偏移, ARGB (按钮透明度, 5, 33, 53))
    选择钮文字.显示 (200 × 分辨率缩放倍率, 113 × 分辨率缩放倍率 ＋ 按钮滑动偏移, “特效”)

    选项 ＝ 1
    选择钮文字.显示 (230 × 分辨率缩放倍率, (108 ＋ 选项 × 50) × 分辨率缩放倍率 ＋ 按钮滑动偏移, “魂满闪光特效”)
    .如果 (开关.魂满闪光 ＝ 真)
        画选择钮 (180 × 分辨率缩放倍率, (100 ＋ 50 × 选项) × 分辨率缩放倍率 ＋ 按钮滑动偏移, 真)
    .否则
        画选择钮 (180 × 分辨率缩放倍率, (100 ＋ 50 × 选项) × 分辨率缩放倍率 ＋ 按钮滑动偏移, 假)
    .如果结束

    选项 ＝ 2
    选择钮文字.显示 (230 × 分辨率缩放倍率, (108 ＋ 选项 × 50) × 分辨率缩放倍率 ＋ 按钮滑动偏移, “UI震撼特效”)
    .如果 (视频开关.UIGOGO特效 ＝ 真)
        画选择钮 (180 × 分辨率缩放倍率, (100 ＋ 50 × 选项) × 分辨率缩放倍率 ＋ 按钮滑动偏移, 真)
    .否则
        画选择钮 (180 × 分辨率缩放倍率, (100 ＋ 50 × 选项) × 分辨率缩放倍率 ＋ 按钮滑动偏移, 假)
    .如果结束


    ' 分辨率栏
    选项 ＝ 3
    引擎.画实心矩形 (170 × 分辨率缩放倍率, (100 ＋ 50 × 选项) × 分辨率缩放倍率 ＋ 按钮滑动偏移, 分辨率.窗口宽度, (100 ＋ 50 × 选项 ＋ 50) × 分辨率缩放倍率 ＋ 按钮滑动偏移, ARGB (按钮透明度, 5, 33, 53))
    选择钮文字.显示 (200 × 分辨率缩放倍率, (113 ＋ 50 × 选项) × 分辨率缩放倍率 ＋ 按钮滑动偏移, “分辨率”)

    选项 ＝ 4
    选择钮文字.显示 (230 × 分辨率缩放倍率, (108 ＋ 选项 × 50) × 分辨率缩放倍率 ＋ 按钮滑动偏移, “1024X600”)
    .如果 (分辨率.窗口宽度 ＝ 1024 且 分辨率.窗口高度 ＝ 600)
        画选择钮 (180 × 分辨率缩放倍率, (100 ＋ 50 × 选项) × 分辨率缩放倍率 ＋ 按钮滑动偏移, 真)
    .否则
        画选择钮 (180 × 分辨率缩放倍率, (100 ＋ 50 × 选项) × 分辨率缩放倍率 ＋ 按钮滑动偏移, 假)
    .如果结束


    选项 ＝ 5
    选择钮文字.显示 (230 × 分辨率缩放倍率, (108 ＋ 选项 × 50) × 分辨率缩放倍率 ＋ 按钮滑动偏移, “1280X800”)
    .如果 (分辨率.窗口宽度 ＝ 1280 且 分辨率.窗口高度 ＝ 800)
        画选择钮 (180 × 分辨率缩放倍率, (100 ＋ 50 × 选项) × 分辨率缩放倍率 ＋ 按钮滑动偏移, 真)
    .否则
        画选择钮 (180 × 分辨率缩放倍率, (100 ＋ 50 × 选项) × 分辨率缩放倍率 ＋ 按钮滑动偏移, 假)
    .如果结束


    选项 ＝ 6
    选择钮文字.显示 (230 × 分辨率缩放倍率, (108 ＋ 选项 × 50) × 分辨率缩放倍率 ＋ 按钮滑动偏移, “1366X768”)
    .如果 (分辨率.窗口宽度 ＝ 1366 且 分辨率.窗口高度 ＝ 768)
        画选择钮 (180 × 分辨率缩放倍率, (100 ＋ 50 × 选项) × 分辨率缩放倍率 ＋ 按钮滑动偏移, 真)
    .否则
        画选择钮 (180 × 分辨率缩放倍率, (100 ＋ 50 × 选项) × 分辨率缩放倍率 ＋ 按钮滑动偏移, 假)
    .如果结束


    选项 ＝ 7
    选择钮文字.显示 (230 × 分辨率缩放倍率, (108 ＋ 选项 × 50) × 分辨率缩放倍率 ＋ 按钮滑动偏移, “1440X900”)
    .如果 (分辨率.窗口宽度 ＝ 1440 且 分辨率.窗口高度 ＝ 900)
        画选择钮 (180 × 分辨率缩放倍率, (100 ＋ 50 × 选项) × 分辨率缩放倍率 ＋ 按钮滑动偏移, 真)
    .否则
        画选择钮 (180 × 分辨率缩放倍率, (100 ＋ 50 × 选项) × 分辨率缩放倍率 ＋ 按钮滑动偏移, 假)
    .如果结束


    选项 ＝ 8
    选择钮文字.显示 (230 × 分辨率缩放倍率, (108 ＋ 选项 × 50) × 分辨率缩放倍率 ＋ 按钮滑动偏移, “1680X1050”)
    .如果 (分辨率.窗口宽度 ＝ 1680 且 分辨率.窗口高度 ＝ 1050)
        画选择钮 (180 × 分辨率缩放倍率, (100 ＋ 50 × 选项) × 分辨率缩放倍率 ＋ 按钮滑动偏移, 真)
    .否则
        画选择钮 (180 × 分辨率缩放倍率, (100 ＋ 50 × 选项) × 分辨率缩放倍率 ＋ 按钮滑动偏移, 假)
    .如果结束


    选项 ＝ 9
    选择钮文字.显示 (230 × 分辨率缩放倍率, (108 ＋ 选项 × 50) × 分辨率缩放倍率 ＋ 按钮滑动偏移, “1920X1080”)
    .如果 (分辨率.窗口宽度 ＝ 1920 且 分辨率.窗口高度 ＝ 1080)
        画选择钮 (180 × 分辨率缩放倍率, (100 ＋ 50 × 选项) × 分辨率缩放倍率 ＋ 按钮滑动偏移, 真)
    .否则
        画选择钮 (180 × 分辨率缩放倍率, (100 ＋ 50 × 选项) × 分辨率缩放倍率 ＋ 按钮滑动偏移, 假)
    .如果结束


    选项 ＝ 10
    选择钮文字.显示 (230 × 分辨率缩放倍率, (108 ＋ 选项 × 50) × 分辨率缩放倍率 ＋ 按钮滑动偏移, “2560X1440”)
    .如果 (分辨率.窗口宽度 ＝ 2560 且 分辨率.窗口高度 ＝ 1440)
        画选择钮 (180 × 分辨率缩放倍率, (100 ＋ 50 × 选项) × 分辨率缩放倍率 ＋ 按钮滑动偏移, 真)
    .否则
        画选择钮 (180 × 分辨率缩放倍率, (100 ＋ 50 × 选项) × 分辨率缩放倍率 ＋ 按钮滑动偏移, 假)
    .如果结束


    选项 ＝ 11
    选择钮文字.显示 (230 × 分辨率缩放倍率, (108 ＋ 选项 × 50) × 分辨率缩放倍率 ＋ 按钮滑动偏移, “3840X2160”)
    .如果 (分辨率.窗口宽度 ＝ 3840 且 分辨率.窗口高度 ＝ 2160)
        画选择钮 (180 × 分辨率缩放倍率, (100 ＋ 50 × 选项) × 分辨率缩放倍率 ＋ 按钮滑动偏移, 真)
    .否则
        画选择钮 (180 × 分辨率缩放倍率, (100 ＋ 50 × 选项) × 分辨率缩放倍率 ＋ 按钮滑动偏移, 假)
    .如果结束



    选项 ＝ 12
    引擎.画实心矩形 (170 × 分辨率缩放倍率, (100 ＋ 50 × 选项) × 分辨率缩放倍率 ＋ 按钮滑动偏移, 分辨率.窗口宽度, (100 ＋ 50 × 选项 ＋ 50) × 分辨率缩放倍率 ＋ 按钮滑动偏移, ARGB (按钮透明度, 5, 33, 53))
    选择钮文字.显示 (200 × 分辨率缩放倍率, (113 ＋ 50 × 选项) × 分辨率缩放倍率 ＋ 按钮滑动偏移, “窗口”)

    选项 ＝ 13
    选择钮文字.显示 (230 × 分辨率缩放倍率, (108 ＋ 选项 × 50) × 分辨率缩放倍率 ＋ 按钮滑动偏移, “窗口化”)
    .如果 (窗口模式 ＝ 真)
        画选择钮 (180 × 分辨率缩放倍率, (100 ＋ 50 × 选项) × 分辨率缩放倍率 ＋ 按钮滑动偏移, 真, 真)
    .否则
        画选择钮 (180 × 分辨率缩放倍率, (100 ＋ 50 × 选项) × 分辨率缩放倍率 ＋ 按钮滑动偏移, 假, 真)
    .如果结束

    选项 ＝ 14
    选择钮文字.显示 (230 × 分辨率缩放倍率, (108 ＋ 选项 × 50) × 分辨率缩放倍率 ＋ 按钮滑动偏移, “圆角渲染”)
    .如果 (圆角 ＝ 真)
        画选择钮 (180 × 分辨率缩放倍率, (100 ＋ 50 × 选项) × 分辨率缩放倍率 ＋ 按钮滑动偏移, 真)
    .否则
        画选择钮 (180 × 分辨率缩放倍率, (100 ＋ 50 × 选项) × 分辨率缩放倍率 ＋ 按钮滑动偏移, 假)
    .如果结束


.如果真结束
.如果真 (按钮页面 ＝ 2)

    引擎.画实心矩形 (170 × 分辨率缩放倍率, 100 × 分辨率缩放倍率 ＋ 按钮滑动偏移, 分辨率.窗口宽度, 150 × 分辨率缩放倍率 ＋ 按钮滑动偏移, ARGB (按钮透明度, 5, 33, 53))
    选择钮文字.显示 (200 × 分辨率缩放倍率, 113 × 分辨率缩放倍率 ＋ 按钮滑动偏移, “音量”)

    选项 ＝ 0
    选择钮文字.显示 (230 × 分辨率缩放倍率, (158 ＋ 选项 × 50) × 分辨率缩放倍率 ＋ 按钮滑动偏移, “全局音量：” ＋ 到文本 (全局音量))
    全局滑块.显示高级 ((450 ＋ 2 × 全局音量) × 分辨率缩放倍率, 170 × 分辨率缩放倍率 ＋ 按钮滑动偏移, 0, 分辨率缩放倍率, 分辨率缩放倍率)
    .计次循环首 (分辨率缩放倍率 ＋ 3, n)
        引擎.画线 (450 × 分辨率缩放倍率, (170 － n ÷ 2) × 分辨率缩放倍率 ＋ 按钮滑动偏移, 650 × 分辨率缩放倍率, (170 － n ÷ 2) × 分辨率缩放倍率 ＋ 按钮滑动偏移, ARGB (滑块背景透明度, 255, 255, 255))
    .计次循环尾 ()

    选项 ＝ 1
    选择钮文字.显示 (230 × 分辨率缩放倍率, (158 ＋ 选项 × 50) × 分辨率缩放倍率 ＋ 按钮滑动偏移, “音乐音量：” ＋ 到文本 (音乐音量))
    全局滑块.显示高级 ((450 ＋ 2 × 音乐音量) × 分辨率缩放倍率, 220 × 分辨率缩放倍率 ＋ 按钮滑动偏移, 0, 分辨率缩放倍率, 分辨率缩放倍率)
    .计次循环首 (分辨率缩放倍率 ＋ 3, n)
        引擎.画线 (450 × 分辨率缩放倍率, (220 － n ÷ 2) × 分辨率缩放倍率 ＋ 按钮滑动偏移, 650 × 分辨率缩放倍率, (220 － n ÷ 2) × 分辨率缩放倍率 ＋ 按钮滑动偏移, ARGB (滑块背景透明度, 255, 255, 255))
    .计次循环尾 ()

    选项 ＝ 2
    选择钮文字.显示 (230 × 分辨率缩放倍率, (158 ＋ 选项 × 50) × 分辨率缩放倍率 ＋ 按钮滑动偏移, “音效音量：” ＋ 到文本 (音效音量))
    全局滑块.显示高级 ((450 ＋ 2 × 音效音量) × 分辨率缩放倍率, 270 × 分辨率缩放倍率 ＋ 按钮滑动偏移, 0, 分辨率缩放倍率, 分辨率缩放倍率)
    .计次循环首 (分辨率缩放倍率 ＋ 3, n)
        引擎.画线 (450 × 分辨率缩放倍率, (270 － n ÷ 2) × 分辨率缩放倍率 ＋ 按钮滑动偏移, 650 × 分辨率缩放倍率, (270 － n ÷ 2) × 分辨率缩放倍率 ＋ 按钮滑动偏移, ARGB (滑块背景透明度, 255, 255, 255))
    .计次循环尾 ()

    引擎.画实心矩形 (170 × 分辨率缩放倍率, 300 × 分辨率缩放倍率 ＋ 按钮滑动偏移, 分辨率.窗口宽度, 350 × 分辨率缩放倍率 ＋ 按钮滑动偏移, ARGB (255, 5, 33, 53))
    选择钮文字.显示 (200 × 分辨率缩放倍率, 313 × 分辨率缩放倍率 ＋ 按钮滑动偏移, “OFFset”)

    选项 ＝ 4
    选择钮文字.显示 (230 × 分辨率缩放倍率, (158 ＋ 选项 × 50) × 分辨率缩放倍率 ＋ 按钮滑动偏移, “全局偏移：” ＋ 到文本 (到整数 (全局OFFSET × 100)) ＋ “ms”)
    全局滑块.显示高级 (全局OFFSET × 100 × 分辨率缩放倍率 ＋ 600 × 分辨率缩放倍率, 370 × 分辨率缩放倍率 ＋ 按钮滑动偏移, 0, 分辨率缩放倍率, 分辨率缩放倍率)
    .计次循环首 (分辨率缩放倍率 ＋ 3, n)
        引擎.画线 (500 × 分辨率缩放倍率, (370 － n ÷ 2) × 分辨率缩放倍率 ＋ 按钮滑动偏移, 700 × 分辨率缩放倍率, (370 － n ÷ 2) × 分辨率缩放倍率 ＋ 按钮滑动偏移, ARGB (100, 255, 255, 255))
    .计次循环尾 ()

    .如果 (OFFSET节拍 ＝ 真)
        选择钮文字.显示 (230 × 分辨率缩放倍率, 408 × 分辨率缩放倍率 ＋ 按钮滑动偏移, “偏移设定助手：” ＋ 到文本 (节拍计数) ＋ “拍”)
    .否则
        选择钮文字.显示 (230 × 分辨率缩放倍率, 408 × 分辨率缩放倍率 ＋ 按钮滑动偏移, “偏移设定助手”)
    .如果结束
    .如果 (OFFSET节拍 ＝ 真)
        画选择钮 (180 × 分辨率缩放倍率, 400 × 分辨率缩放倍率 ＋ 按钮滑动偏移, 真)
    .否则
        画选择钮 (180 × 分辨率缩放倍率, 400 × 分辨率缩放倍率 ＋ 按钮滑动偏移, 假)
    .如果结束
    选择钮文字.显示 (230 × 分辨率缩放倍率, 458 × 分辨率缩放倍率 ＋ 按钮滑动偏移, “复位数值”)

.如果真结束
.如果真 (按钮页面 ＝ 3)
    引擎.画实心矩形 (170 × 分辨率缩放倍率, 100 × 分辨率缩放倍率 ＋ 按钮滑动偏移, 分辨率.窗口宽度, 150 × 分辨率缩放倍率 ＋ 按钮滑动偏移, ARGB (按钮透明度, 5, 33, 53))
    选择钮文字.显示 (200 × 分辨率缩放倍率, 113 × 分辨率缩放倍率 ＋ 按钮滑动偏移, “游戏控制（长按修改按键）”)
    选择钮文字.显示 (230 × 分辨率缩放倍率, 158 × 分辨率缩放倍率 ＋ 按钮滑动偏移, “蓝色（左）：” ＋ 取按键设定 (1))
    选择钮文字.显示 (230 × 分辨率缩放倍率, 208 × 分辨率缩放倍率 ＋ 按钮滑动偏移, “蓝色（右）：” ＋ 取按键设定 (2))
    选择钮文字.显示 (230 × 分辨率缩放倍率, 258 × 分辨率缩放倍率 ＋ 按钮滑动偏移, “红色（左）：” ＋ 取按键设定 (3))
    选择钮文字.显示 (230 × 分辨率缩放倍率, 308 × 分辨率缩放倍率 ＋ 按钮滑动偏移, “红色（右）：” ＋ 取按键设定 (4))
    引擎.画实心矩形 (170 × 分辨率缩放倍率, 350 × 分辨率缩放倍率 ＋ 按钮滑动偏移, 分辨率.窗口宽度, 400 × 分辨率缩放倍率 ＋ 按钮滑动偏移, ARGB (按钮透明度, 5, 33, 53))
    选择钮文字.显示 (200 × 分辨率缩放倍率, 363 × 分辨率缩放倍率 ＋ 按钮滑动偏移, “全局”)
    选择钮文字.显示 (230 × 分辨率缩放倍率, 408 × 分辨率缩放倍率 ＋ 按钮滑动偏移, “游戏暂停：” ＋ 取按键设定 (5))
.如果真结束


.如果真 (按钮页面 ＝ 4)
    ' 关于页面

    通用文字.置颜色 (ARGB (按钮透明度, 255, 255, 255))
    通用文字.显示 (480 × 分辨率缩放倍率, 100 × 分辨率缩放倍率 ＋ 按钮滑动偏移, “T-Aiko HD”)

    关于界面兔子LOGO精灵.置透明度 (按钮透明度)
    关于界面兔子LOGO精灵.显示高级 (260 × 分辨率缩放倍率, 200 × 分辨率缩放倍率 ＋ 按钮滑动偏移, 0, 分辨率缩放倍率, 分辨率缩放倍率)
    AGE引擎LOGO精灵.置透明度 (按钮透明度)
    AGE引擎LOGO精灵.显示高级 (600 × 分辨率缩放倍率, 300 × 分辨率缩放倍率 ＋ 按钮滑动偏移, 0, 分辨率缩放倍率, 分辨率缩放倍率)

    十五号文字.置颜色 (ARGB (按钮透明度, 255, 255, 255))


    十五号文字.显示 (200 × 分辨率缩放倍率, 500 × 分辨率缩放倍率 ＋ 按钮滑动偏移, “T-Aiko HD ” ＋ #版本号 ＋ #换行符 ＋ “Powered by Rabbit Engine ” ＋ #引擎版本 ＋ #换行符 ＋ #换行符 ＋ #换行符 ＋ “Rabbit Game Console 版本：” ＋ #RBC ＋ #关于文字)


.如果真结束
.如果真 (按钮滑动尽头 ＞ 0 且 按钮页面 ＝ 边栏选中项)
    侧滑块.显示高级 (分辨率.窗口宽度 － 20 × 分辨率缩放倍率, (滑块坐标2 ＋ 75) × 分辨率缩放倍率, 0, 分辨率缩放倍率, 分辨率缩放倍率)
.如果真结束



.子程序 画选择钮
.参数 X, 整数型
.参数 Y, 整数型
.参数 选中, 逻辑型, 可空
.参数 禁用, 逻辑型, 可空
.局部变量 空隙的宽度, 整数型
.局部变量 边框的宽度, 整数型
.局部变量 宽度, 整数型
.局部变量 高度, 整数型
.局部变量 颜色, 整数型

空隙的宽度 ＝ 1 × 分辨率缩放倍率
边框的宽度 ＝ 2 × 分辨率缩放倍率
宽度 ＝ 35 × 分辨率缩放倍率
高度 ＝ 30 × 分辨率缩放倍率
.如果 (禁用 ＝ 真)
    颜色 ＝ ARGB (按钮透明度, 100, 100, 100)
.否则
    颜色 ＝ ARGB (按钮透明度, 255, 255, 255)
.如果结束
X ＝ X ＋ 8 × 分辨率缩放倍率
Y ＝ Y ＋ 8 × 分辨率缩放倍率
' 引擎.画实心矩形 (X － 空隙的宽度 － 边框的宽度, Y － 空隙的宽度 － 边框的宽度, X ＋ 宽度 ＋ 空隙的宽度 ＋ 边框的宽度, Y ＋ 高度 ＋ 空隙的宽度 ＋ 边框的宽度, #颜色_白)
引擎.画实心矩形 (X － 空隙的宽度 － 边框的宽度, Y － 空隙的宽度 － 边框的宽度, X ＋ 宽度 ＋ 空隙的宽度 ＋ 边框的宽度, Y － 空隙的宽度, 颜色)
引擎.画实心矩形 (X － 空隙的宽度 － 边框的宽度, Y ＋ 高度 ＋ 空隙的宽度 ＋ 边框的宽度, X ＋ 宽度 ＋ 空隙的宽度 ＋ 边框的宽度, Y ＋ 高度 ＋ 空隙的宽度, 颜色)
引擎.画实心矩形 (X － 空隙的宽度 － 边框的宽度, Y － 空隙的宽度 － 边框的宽度, X － 空隙的宽度, Y ＋ 高度 ＋ 空隙的宽度, 颜色)
引擎.画实心矩形 (X ＋ 宽度 ＋ 空隙的宽度, Y － 空隙的宽度 － 边框的宽度, X ＋ 宽度 ＋ 空隙的宽度 ＋ 边框的宽度, Y ＋ 高度 ＋ 空隙的宽度, 颜色)
.如果真 (选中)
    引擎.画实心矩形 (X, Y, X ＋ 宽度, Y ＋ 高度, 颜色)
.如果真结束



.子程序 选项逻辑
.局部变量 选择判断, 逻辑型, 静态
.局部变量 临时特效, 设置界面选中特效
.局部变量 选项, 整数型

临时特效.透明度 ＝ 255
.如果真 (按钮页面 ＝ 0)
    ' 自动模式
    选项 ＝ 1
    .如果 (判断是否进入区域 (175 × 分辨率缩放倍率, 分辨率.窗口宽度, 101 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 按钮滑动偏移, 100 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 50 × 分辨率缩放倍率 ＋ 按钮滑动偏移) ＝ 真)

        .如果 (选择判断 ＝ 假)
            .如果 (引擎.键_取选中 (#鼠标左键))
                选择判断 ＝ 真
                临时特效.坐标 ＝ 100 ＋ 50 × 选项
                加入成员 (选中特效, 临时特效)
                .如果 (自动模式 ＝ 真)
                    写配置项 (取运行目录 () ＋ “\Config.ini”, “Game”, “Auto”, “0”)
                    自动模式 ＝ 假
                    BASS_ChannelPlay (选项音效关, 真)

                .否则
                    写配置项 (取运行目录 () ＋ “\Config.ini”, “Game”, “Auto”, “1”)
                    自动模式 ＝ 真
                    BASS_ChannelPlay (选项音效开, 真)
                .如果结束
                加入控制台文本 (“Set 自动模式 -->” ＋ 到文本 (自动模式))
            .否则

            .如果结束

        .否则

        .如果结束
        .如果真 (引擎.键_取弹起 (#鼠标左键))
            选择判断 ＝ 假
        .如果真结束

    .否则

    .如果结束

    ' LightMod
    选项 ＝ 2
    .如果 (判断是否进入区域 (175 × 分辨率缩放倍率, 分辨率.窗口宽度, 101 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 按钮滑动偏移, 100 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 50 × 分辨率缩放倍率 ＋ 按钮滑动偏移) ＝ 真)

        .如果 (选择判断 ＝ 假)
            .如果 (引擎.键_取选中 (#鼠标左键))
                选择判断 ＝ 真
                临时特效.坐标 ＝ 100 ＋ 50 × 选项
                加入成员 (选中特效, 临时特效)

                .如果 (MOD开关.灯光MOD ＝ 真)
                    写配置项 (取运行目录 () ＋ “\Config.ini”, “MOD”, “LightMod”, “0”)
                    MOD开关.灯光MOD ＝ 假
                    BASS_ChannelPlay (选项音效关, 真)
                .否则
                    写配置项 (取运行目录 () ＋ “\Config.ini”, “MOD”, “LightMod”, “1”)
                    MOD开关.灯光MOD ＝ 真
                    BASS_ChannelPlay (选项音效开, 真)
                .如果结束
                加入控制台文本 (“Set MOD开关.灯光MOD -->” ＋ 到文本 (MOD开关.灯光MOD))
            .否则

            .如果结束

        .否则

        .如果结束
        .如果真 (引擎.键_取弹起 (#鼠标左键))
            选择判断 ＝ 假
        .如果真结束

    .否则

    .如果结束
    ' 红蓝交换
    选项 ＝ 3
    .如果 (判断是否进入区域 (175 × 分辨率缩放倍率, 分辨率.窗口宽度, 101 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 按钮滑动偏移, 100 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 50 × 分辨率缩放倍率 ＋ 按钮滑动偏移) ＝ 真)

        .如果 (选择判断 ＝ 假)
            .如果 (引擎.键_取选中 (#鼠标左键))
                选择判断 ＝ 真
                临时特效.坐标 ＝ 100 ＋ 50 × 选项
                加入成员 (选中特效, 临时特效)

                .如果 (MOD开关.红蓝交换 ＝ 真)
                    写配置项 (取运行目录 () ＋ “\Config.ini”, “MOD”, “LightMod”, “0”)
                    MOD开关.红蓝交换 ＝ 假
                    BASS_ChannelPlay (选项音效关, 真)
                .否则
                    写配置项 (取运行目录 () ＋ “\Config.ini”, “MOD”, “LightMod”, “1”)
                    MOD开关.红蓝交换 ＝ 真
                    BASS_ChannelPlay (选项音效开, 真)
                .如果结束
                加入控制台文本 (“Set MOD开关.红蓝交换 -->” ＋ 到文本 (MOD开关.红蓝交换))
            .否则

            .如果结束

        .否则

        .如果结束
        .如果真 (引擎.键_取弹起 (#鼠标左键))
            选择判断 ＝ 假
        .如果真结束

    .否则

    .如果结束

    ' 低密度模式
    选项 ＝ 4
    .如果 (判断是否进入区域 (175 × 分辨率缩放倍率, 分辨率.窗口宽度, 101 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 按钮滑动偏移, 100 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 50 × 分辨率缩放倍率 ＋ 按钮滑动偏移) ＝ 真)

        .如果 (选择判断 ＝ 假)
            .如果 (引擎.键_取选中 (#鼠标左键))
                选择判断 ＝ 真
                临时特效.坐标 ＝ 100 ＋ 50 × 选项
                加入成员 (选中特效, 临时特效)

                .如果 (MOD开关.密度减少 ＝ 真)
                    写配置项 (取运行目录 () ＋ “\Config.ini”, “MOD”, “LightMod”, “0”)
                    MOD开关.密度减少 ＝ 假
                    BASS_ChannelPlay (选项音效关, 真)
                .否则
                    写配置项 (取运行目录 () ＋ “\Config.ini”, “MOD”, “LightMod”, “1”)
                    MOD开关.密度减少 ＝ 真
                    BASS_ChannelPlay (选项音效开, 真)
                .如果结束
                加入控制台文本 (“Set MOD开关.密度减少-->” ＋ 到文本 (MOD开关.密度减少))
            .否则

            .如果结束

        .否则

        .如果结束
        .如果真 (引擎.键_取弹起 (#鼠标左键))
            选择判断 ＝ 假
        .如果真结束

    .否则

    .如果结束
    ' 欢迎音乐
    选项 ＝ 5
    .如果 (判断是否进入区域 (175 × 分辨率缩放倍率, 分辨率.窗口宽度, 101 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 按钮滑动偏移, 100 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 50 × 分辨率缩放倍率 ＋ 按钮滑动偏移) ＝ 真)

        .如果 (选择判断 ＝ 假)
            .如果 (引擎.键_取选中 (#鼠标左键))
                选择判断 ＝ 真
                临时特效.坐标 ＝ 100 ＋ 50 × 选项
                加入成员 (选中特效, 临时特效)

                .如果 (欢迎音乐总开关 ＝ 真)
                    写配置项 (取运行目录 () ＋ “\Config.ini”, “Game”, “WelcomeMusic”, “1”)
                    欢迎音乐总开关 ＝ 假
                    BASS_ChannelPlay (选项音效关, 真)
                .否则
                    写配置项 (取运行目录 () ＋ “\Config.ini”, “Game”, “WelcomeMusic”, “0”)
                    欢迎音乐总开关 ＝ 真
                    BASS_ChannelPlay (选项音效开, 真)
                .如果结束
                加入控制台文本 (“Set 欢迎音乐总开关-->” ＋ 到文本 (欢迎音乐总开关))
            .否则

            .如果结束

        .否则

        .如果结束
        .如果真 (引擎.键_取弹起 (#鼠标左键))
            选择判断 ＝ 假
        .如果真结束

    .否则

    .如果结束

    ' 调试信息
    选项 ＝ 7
    .如果 (判断是否进入区域 (175 × 分辨率缩放倍率, 分辨率.窗口宽度, 101 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 按钮滑动偏移, 100 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 50 × 分辨率缩放倍率 ＋ 按钮滑动偏移) ＝ 真)

        .如果 (选择判断 ＝ 假)
            .如果 (引擎.键_取选中 (#鼠标左键))
                选择判断 ＝ 真
                临时特效.坐标 ＝ 100 ＋ 50 × 选项
                加入成员 (选中特效, 临时特效)

                .如果 (调试信息显示 ＝ 真)
                    写配置项 (取运行目录 () ＋ “\Config.ini”, “Debug”, “Debug”, “0”)
                    调试信息显示 ＝ 假
                    BASS_ChannelPlay (选项音效关, 真)
                .否则
                    写配置项 (取运行目录 () ＋ “\Config.ini”, “Debug”, “Debug”, “1”)
                    调试信息显示 ＝ 真
                    BASS_ChannelPlay (选项音效开, 真)
                .如果结束
                加入控制台文本 (“Set 调试信息显示-->” ＋ 到文本 (调试信息显示))
            .否则

            .如果结束

        .否则

        .如果结束
        .如果真 (引擎.键_取弹起 (#鼠标左键))
            选择判断 ＝ 假
        .如果真结束

    .否则

    .如果结束

    选项 ＝ 选项 ＋ 1
    .如果 (判断是否进入区域 (175 × 分辨率缩放倍率, 分辨率.窗口宽度, 101 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 按钮滑动偏移, 100 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 50 × 分辨率缩放倍率 ＋ 按钮滑动偏移) ＝ 真)

        .如果 (选择判断 ＝ 假)
            .如果 (引擎.键_取选中 (#鼠标左键))
                选择判断 ＝ 真
                临时特效.坐标 ＝ 100 ＋ 50 × 选项
                加入成员 (选中特效, 临时特效)
                清理粒子 ()
                .如果 (播放器模式 ＝ 真)
                    写配置项 (取运行目录 () ＋ “\Config.ini”, “Display”, “Game”, “1”)
                    播放器模式 ＝ 假
                    BASS_ChannelPlay (选项音效关, 真)
                .否则
                    写配置项 (取运行目录 () ＋ “\Config.ini”, “Display”, “Game”, “0”)
                    播放器模式 ＝ 真
                    BASS_ChannelPlay (选项音效开, 真)
                .如果结束
                加入控制台文本 (“Set 调试信息显示-->” ＋ 到文本 (调试信息显示))
            .否则

            .如果结束

        .否则

        .如果结束
        .如果真 (引擎.键_取弹起 (#鼠标左键))
            选择判断 ＝ 假
        .如果真结束

    .否则

    .如果结束

.如果真结束
.如果真 (按钮页面 ＝ 1)
    ' 魂满闪光
    选项 ＝ 1
    .如果 (判断是否进入区域 (175 × 分辨率缩放倍率, 分辨率.窗口宽度, 101 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 按钮滑动偏移, 100 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 50 × 分辨率缩放倍率 ＋ 按钮滑动偏移) ＝ 真)
        .如果 (选择判断 ＝ 假)
            .如果 (引擎.键_取选中 (#鼠标左键))
                选择判断 ＝ 真
                临时特效.坐标 ＝ 100 ＋ 50 × 选项
                加入成员 (选中特效, 临时特效)

                .如果 (开关.魂满闪光 ＝ 真)
                    写配置项 (取运行目录 () ＋ “\Config.ini”, “effect”, “FlashH”, “0”)
                    开关.魂满闪光 ＝ 假
                    BASS_ChannelPlay (选项音效关, 真)
                .否则
                    写配置项 (取运行目录 () ＋ “\Config.ini”, “effect”, “FlashH”, “1”)
                    开关.魂满闪光 ＝ 真
                    BASS_ChannelPlay (选项音效开, 真)
                .如果结束
                加入控制台文本 (“Set 开关.魂满闪光-->” ＋ 到文本 (开关.魂满闪光))
            .否则

            .如果结束

        .否则

        .如果结束
        .如果真 (引擎.键_取弹起 (#鼠标左键))
            选择判断 ＝ 假
        .如果真结束

    .否则

    .如果结束
    选项 ＝ 2
    .如果 (判断是否进入区域 (175 × 分辨率缩放倍率, 分辨率.窗口宽度, 101 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 按钮滑动偏移, 100 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 50 × 分辨率缩放倍率 ＋ 按钮滑动偏移) ＝ 真)
        .如果 (选择判断 ＝ 假)
            .如果 (引擎.键_取选中 (#鼠标左键))
                选择判断 ＝ 真
                临时特效.坐标 ＝ 100 ＋ 50 × 选项
                加入成员 (选中特效, 临时特效)

                .如果 (视频开关.UIGOGO特效 ＝ 真)
                    写配置项 (取运行目录 () ＋ “\Config.ini”, “effect”, “Shock”, “0”)
                    视频开关.UIGOGO特效 ＝ 假
                    BASS_ChannelPlay (选项音效关, 真)
                .否则
                    写配置项 (取运行目录 () ＋ “\Config.ini”, “effect”, “Shock”, “1”)
                    视频开关.UIGOGO特效 ＝ 真
                    BASS_ChannelPlay (选项音效开, 真)
                .如果结束
                加入控制台文本 (“Set 视频开关.UIGOGO特效-->” ＋ 到文本 (视频开关.UIGOGO特效))
            .否则

            .如果结束

        .否则

        .如果结束
        .如果真 (引擎.键_取弹起 (#鼠标左键))
            选择判断 ＝ 假
        .如果真结束

    .否则

    .如果结束

    选项 ＝ 4

    .如果 (判断是否进入区域 (175 × 分辨率缩放倍率, 分辨率.窗口宽度, 101 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 按钮滑动偏移, 100 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 50 × 分辨率缩放倍率 ＋ 按钮滑动偏移) ＝ 真)
        .如果 (引擎.键_取选中 (#鼠标左键) 且 鼠标左键计时 ≤ 1)
            临时特效.坐标 ＝ 100 ＋ 50 × 选项
            加入成员 (选中特效, 临时特效)
            选择判断 ＝ 真
            鼠标左键选项 ＝ 选项
        .否则

        .如果结束

        .如果 (引擎.键_取弹起 (#鼠标左键) 且 鼠标左键计时 ≤ 1 且 鼠标左键选项 ＝ 选项)
            .如果 (分辨率.窗口宽度 ＝ 1024 且 分辨率.窗口高度 ＝ 600)

            .否则
                BASS_StreamFree (播放句柄)
                写配置项 (取运行目录 () ＋ “\Config.ini”, “Display”, “ResolutionX”, “1024”)
                写配置项 (取运行目录 () ＋ “\Config.ini”, “Display”, “ResolutionY”, “600”)
                运行 (取运行目录 () ＋ “\” ＋ 取执行文件名 (), 假, )
                延时 (100)
                结束 ()

            .如果结束

        .否则

        .如果结束



    .否则

    .如果结束


    选项 ＝ 5
    .如果 (判断是否进入区域 (175 × 分辨率缩放倍率, 分辨率.窗口宽度, 101 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 按钮滑动偏移, 100 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 50 × 分辨率缩放倍率 ＋ 按钮滑动偏移) ＝ 真)
        .如果 (引擎.键_取选中 (#鼠标左键) 且 鼠标左键计时 ≤ 1)
            临时特效.坐标 ＝ 100 ＋ 50 × 选项
            加入成员 (选中特效, 临时特效)
            选择判断 ＝ 真
            鼠标左键选项 ＝ 选项
        .否则

        .如果结束


        .如果 (引擎.键_取弹起 (#鼠标左键) 且 鼠标左键计时 ≤ 1 且 鼠标左键选项 ＝ 选项)
            .如果 (分辨率.窗口宽度 ＝ 1280 且 分辨率.窗口高度 ＝ 800)

            .否则
                选择判断 ＝ 真
                BASS_StreamFree (播放句柄)
                写配置项 (取运行目录 () ＋ “\Config.ini”, “Display”, “ResolutionX”, “1280”)
                写配置项 (取运行目录 () ＋ “\Config.ini”, “Display”, “ResolutionY”, “800”)
                运行 (取运行目录 () ＋ “\” ＋ 取执行文件名 (), 假, )
                延时 (100)
                结束 ()


            .如果结束

        .否则

        .如果结束



    .否则

    .如果结束

    选项 ＝ 6
    .如果 (判断是否进入区域 (175 × 分辨率缩放倍率, 分辨率.窗口宽度, 101 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 按钮滑动偏移, 100 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 50 × 分辨率缩放倍率 ＋ 按钮滑动偏移) ＝ 真)
        .如果 (引擎.键_取选中 (#鼠标左键) 且 鼠标左键计时 ≤ 1)
            临时特效.坐标 ＝ 100 ＋ 50 × 选项
            加入成员 (选中特效, 临时特效)
            选择判断 ＝ 真
            鼠标左键选项 ＝ 选项
        .否则

        .如果结束


        .如果 (引擎.键_取弹起 (#鼠标左键) 且 鼠标左键计时 ≤ 1 且 鼠标左键选项 ＝ 选项)
            .如果 (分辨率.窗口宽度 ＝ 1366 且 分辨率.窗口高度 ＝ 768)

            .否则
                选择判断 ＝ 真
                写配置项 (取运行目录 () ＋ “\Config.ini”, “Display”, “ResolutionX”, “1366”)
                写配置项 (取运行目录 () ＋ “\Config.ini”, “Display”, “ResolutionY”, “768”)
                运行 (取运行目录 () ＋ “\” ＋ 取执行文件名 (), 假, )
                延时 (100)
                结束 ()

            .如果结束


        .否则

        .如果结束



    .否则

    .如果结束
    选项 ＝ 7
    .如果 (判断是否进入区域 (175 × 分辨率缩放倍率, 分辨率.窗口宽度, 101 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 按钮滑动偏移, 100 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 50 × 分辨率缩放倍率 ＋ 按钮滑动偏移) ＝ 真)
        .如果 (引擎.键_取选中 (#鼠标左键) 且 鼠标左键计时 ≤ 1)
            临时特效.坐标 ＝ 100 ＋ 50 × 选项
            加入成员 (选中特效, 临时特效)
            选择判断 ＝ 真
            鼠标左键选项 ＝ 选项
        .否则

        .如果结束


        .如果 (引擎.键_取弹起 (#鼠标左键) 且 鼠标左键计时 ≤ 1 且 鼠标左键选项 ＝ 选项)
            .如果 (分辨率.窗口宽度 ＝ 1440 且 分辨率.窗口高度 ＝ 900)

            .否则
                选择判断 ＝ 真
                写配置项 (取运行目录 () ＋ “\Config.ini”, “Display”, “ResolutionX”, “1440”)
                写配置项 (取运行目录 () ＋ “\Config.ini”, “Display”, “ResolutionY”, “900”)
                运行 (取运行目录 () ＋ “\” ＋ 取执行文件名 (), 假, )
                延时 (100)
                结束 ()


            .如果结束

        .否则

        .如果结束



    .否则

    .如果结束
    选项 ＝ 8
    .如果 (判断是否进入区域 (175 × 分辨率缩放倍率, 分辨率.窗口宽度, 101 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 按钮滑动偏移, 100 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 50 × 分辨率缩放倍率 ＋ 按钮滑动偏移) ＝ 真)
        .如果 (引擎.键_取选中 (#鼠标左键) 且 鼠标左键计时 ≤ 1)
            临时特效.坐标 ＝ 100 ＋ 50 × 选项
            加入成员 (选中特效, 临时特效)
            鼠标左键选项 ＝ 选项
        .否则

        .如果结束


        .如果 (引擎.键_取弹起 (#鼠标左键) 且 鼠标左键计时 ≤ 1 且 鼠标左键选项 ＝ 选项)
            .如果 (分辨率.窗口宽度 ＝ 1680 且 分辨率.窗口高度 ＝ 1050)

            .否则

                写配置项 (取运行目录 () ＋ “\Config.ini”, “Display”, “ResolutionX”, “1680”)
                写配置项 (取运行目录 () ＋ “\Config.ini”, “Display”, “ResolutionY”, “1050”)
                运行 (取运行目录 () ＋ “\” ＋ 取执行文件名 (), 假, )
                延时 (100)
                结束 ()

            .如果结束

        .否则

        .如果结束


    .否则

    .如果结束
    选项 ＝ 9
    .如果 (判断是否进入区域 (175 × 分辨率缩放倍率, 分辨率.窗口宽度, 101 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 按钮滑动偏移, 100 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 50 × 分辨率缩放倍率 ＋ 按钮滑动偏移) ＝ 真)
        .如果 (引擎.键_取选中 (#鼠标左键) 且 鼠标左键计时 ≤ 1)
            临时特效.坐标 ＝ 100 ＋ 50 × 选项
            加入成员 (选中特效, 临时特效)
            鼠标左键选项 ＝ 选项
        .否则

        .如果结束
        .如果 (引擎.键_取弹起 (#鼠标左键) 且 鼠标左键计时 ≤ 1 且 鼠标左键选项 ＝ 选项)
            .如果 (分辨率.窗口宽度 ＝ 1920 且 分辨率.窗口高度 ＝ 1080)

            .否则

                写配置项 (取运行目录 () ＋ “\Config.ini”, “Display”, “ResolutionX”, “1920”)
                写配置项 (取运行目录 () ＋ “\Config.ini”, “Display”, “ResolutionY”, “1080”)
                运行 (取运行目录 () ＋ “\” ＋ 取执行文件名 (), 假, )
                延时 (100)
                结束 ()

            .如果结束

        .否则

        .如果结束



    .否则

    .如果结束
    选项 ＝ 10
    .如果 (判断是否进入区域 (175 × 分辨率缩放倍率, 分辨率.窗口宽度, 101 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 按钮滑动偏移, 100 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 50 × 分辨率缩放倍率 ＋ 按钮滑动偏移) ＝ 真)
        .如果 (引擎.键_取选中 (#鼠标左键) 且 鼠标左键计时 ≤ 1)
            临时特效.坐标 ＝ 100 ＋ 50 × 选项
            加入成员 (选中特效, 临时特效)
            选择判断 ＝ 真
            鼠标左键选项 ＝ 选项
        .否则

        .如果结束


        .如果 (引擎.键_取弹起 (#鼠标左键) 且 鼠标左键计时 ≤ 1)
            .如果 (分辨率.窗口宽度 ＝ 2560 且 分辨率.窗口高度 ＝ 1440)

            .否则
                选择判断 ＝ 真
                写配置项 (取运行目录 () ＋ “\Config.ini”, “Display”, “ResolutionX”, “2560”)
                写配置项 (取运行目录 () ＋ “\Config.ini”, “Display”, “ResolutionY”, “1440”)
                运行 (取运行目录 () ＋ “\” ＋ 取执行文件名 (), 假, )
                延时 (100)
                结束 ()

            .如果结束


        .否则

        .如果结束


    .否则

    .如果结束
    选项 ＝ 11
    .如果 (判断是否进入区域 (175 × 分辨率缩放倍率, 分辨率.窗口宽度, 101 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 按钮滑动偏移, 100 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 50 × 分辨率缩放倍率 ＋ 按钮滑动偏移) ＝ 真)
        .如果 (引擎.键_取选中 (#鼠标左键) 且 鼠标左键计时 ≤ 1)
            临时特效.坐标 ＝ 100 ＋ 50 × 选项
            加入成员 (选中特效, 临时特效)
            选择判断 ＝ 真
            鼠标左键选项 ＝ 选项
        .否则

        .如果结束



        .如果 (引擎.键_取弹起 (#鼠标左键) 且 鼠标左键计时 ≤ 1 且 鼠标左键选项 ＝ 选项)
            .如果 (分辨率.窗口宽度 ＝ 3840 且 分辨率.窗口高度 ＝ 2160)

            .否则
                选择判断 ＝ 真
                写配置项 (取运行目录 () ＋ “\Config.ini”, “Display”, “ResolutionX”, “3840”)
                写配置项 (取运行目录 () ＋ “\Config.ini”, “Display”, “ResolutionY”, “2160”)
                运行 (取运行目录 () ＋ “\” ＋ 取执行文件名 (), 假, )
                延时 (100)
                结束 ()

            .如果结束


        .否则

        .如果结束



    .否则

    .如果结束

    选项 ＝ 13


    .如果 (判断是否进入区域 (175 × 分辨率缩放倍率, 分辨率.窗口宽度, 101 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 按钮滑动偏移, 100 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 50 × 分辨率缩放倍率 ＋ 按钮滑动偏移) ＝ 真)

        .如果 (选择判断 ＝ 假)
            .如果 (引擎.键_取选中 (#鼠标左键))
                选择判断 ＝ 真
                临时特效.坐标 ＝ 100 ＋ 50 × 选项
                加入成员 (选中特效, 临时特效)

                .如果 (窗口模式 ＝ 假)
                    写配置项 (取运行目录 () ＋ “\Config.ini”, “Display”, “Windows”, “1”)
                    窗口模式 ＝ 真
                    ' 引擎.置窗口模式 (窗口模式)
                    BASS_ChannelPlay (选项音效开, 真)
                .否则
                    ' 写配置项 (取运行目录 () ＋ “\Config.ini”, “Display”, “Windows”, “0”)
                    ' 窗口模式 ＝ 假
                    ' BASS_ChannelPlay (选项音效关, 真)
                    ' 引擎.置窗口模式 (窗口模式)
                .如果结束

            .否则

            .如果结束

        .否则

        .如果结束
        .如果真 (引擎.键_取弹起 (#鼠标左键))
            选择判断 ＝ 假
        .如果真结束

    .否则

    .如果结束
    选项 ＝ 14


    .如果 (判断是否进入区域 (175 × 分辨率缩放倍率, 分辨率.窗口宽度, 101 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 按钮滑动偏移, 100 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 50 × 分辨率缩放倍率 ＋ 按钮滑动偏移) ＝ 真)

        .如果 (选择判断 ＝ 假)
            .如果 (引擎.键_取选中 (#鼠标左键))
                选择判断 ＝ 真
                临时特效.坐标 ＝ 100 ＋ 50 × 选项
                加入成员 (选中特效, 临时特效)
                .如果 (圆角 ＝ 假)
                    写配置项 (取运行目录 () ＋ “\Config.ini”, “Display”, “Fillet”, “1”)
                    圆角 ＝ 真
                    BASS_ChannelPlay (选项音效开, 真)
                .否则
                    写配置项 (取运行目录 () ＋ “\Config.ini”, “Display”, “Fillet”, “0”)
                    圆角 ＝ 假
                    BASS_ChannelPlay (选项音效关, 真)

                .如果结束

            .否则

            .如果结束

        .否则

        .如果结束
        .如果真 (引擎.键_取弹起 (#鼠标左键))
            选择判断 ＝ 假
        .如果真结束

    .否则

    .如果结束

.如果真结束

.如果真 (按钮页面 ＝ 2)





    选项 ＝ 6
    .如果 (判断是否进入区域 (175 × 分辨率缩放倍率, 分辨率.窗口宽度, 101 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 按钮滑动偏移, 100 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 50 × 分辨率缩放倍率 ＋ 按钮滑动偏移) ＝ 真)
        .如果 (选择判断 ＝ 假)
            .如果 (引擎.键_取按下 (#鼠标左键))
                选择判断 ＝ 真
                临时特效.坐标 ＝ 100 ＋ 50 × 选项
                加入成员 (选中特效, 临时特效)
                .如果 (OFFSET节拍 ＝ 真)
                    OFFSET节拍 ＝ 假
                    BASS_ChannelPlay (选项音效关, 真)
                .否则
                    OFFSET节拍 ＝ 真
                    BASS_ChannelPlay (选项音效开, 真)
                    节拍计数 ＝ 0
                .如果结束
                加入控制台文本 (“Set OFFSET节拍-->” ＋ 到文本 (OFFSET节拍))
            .否则

            .如果结束

        .否则

        .如果结束
        .如果真 (引擎.键_取弹起 (#鼠标左键))
            选择判断 ＝ 假
        .如果真结束

    .否则

    .如果结束
    选项 ＝ 7
    .如果 (判断是否进入区域 (175 × 分辨率缩放倍率, 分辨率.窗口宽度, 101 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 按钮滑动偏移, 100 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 50 × 分辨率缩放倍率 ＋ 按钮滑动偏移) ＝ 真)
        .如果 (选择判断 ＝ 假)
            .如果 (引擎.键_取按下 (#鼠标左键))
                选择判断 ＝ 真
                临时特效.坐标 ＝ 100 ＋ 50 × 选项
                加入成员 (选中特效, 临时特效)
                全局OFFSET ＝ 0
                写配置项 (取运行目录 () ＋ “\Config.ini”, “Game”, “Offset”, 到文本 (全局OFFSET))
            .否则

            .如果结束

        .否则

        .如果结束
        .如果真 (引擎.键_取弹起 (#鼠标左键))
            选择判断 ＝ 假
        .如果真结束

    .否则

    .如果结束

.如果真结束
.如果真 (按钮页面 ＝ 3)
    选项 ＝ 1
    .如果 (判断是否进入区域 (175 × 分辨率缩放倍率, 分辨率.窗口宽度, 101 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 按钮滑动偏移, 100 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 50 × 分辨率缩放倍率 ＋ 按钮滑动偏移) ＝ 真)
        .如果 (引擎.键_取选中 (#鼠标左键))
            临时特效.坐标 ＝ 150
            加入成员 (选中特效, 临时特效)
            .如果 (鼠标左键选项 ＝ 选项)

            .否则
                鼠标左键选项 ＝ 选项
                鼠标左键计时 ＝ 0
            .如果结束

        .否则

        .如果结束
        .如果真 (引擎.键_取选中 (#鼠标左键) 且 鼠标左键计时 ＞ 1 且 鼠标左键选项 ＝ 选项)
            更换按键事件 ＝ 真
            更换按键判断 ＝ 1
        .如果真结束


    .否则

    .如果结束

    选项 ＝ 2
    .如果 (判断是否进入区域 (175 × 分辨率缩放倍率, 分辨率.窗口宽度, 101 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 按钮滑动偏移, 100 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 50 × 分辨率缩放倍率 ＋ 按钮滑动偏移) ＝ 真)

        .如果 (引擎.键_取选中 (#鼠标左键))
            临时特效.坐标 ＝ 150 ＋ 50 × (选项 － 1)
            加入成员 (选中特效, 临时特效)
            .如果 (鼠标左键选项 ＝ 选项)

            .否则
                鼠标左键选项 ＝ 选项
                鼠标左键计时 ＝ 0
            .如果结束

        .否则

        .如果结束
        .如果真 (引擎.键_取选中 (#鼠标左键) 且 鼠标左键计时 ＞ 1 且 鼠标左键选项 ＝ 选项)
            更换按键事件 ＝ 真
            更换按键判断 ＝ 2
        .如果真结束


    .否则

    .如果结束
    选项 ＝ 3
    .如果 (判断是否进入区域 (175 × 分辨率缩放倍率, 分辨率.窗口宽度, 101 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 按钮滑动偏移, 100 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 50 × 分辨率缩放倍率 ＋ 按钮滑动偏移) ＝ 真)

        .如果 (引擎.键_取选中 (#鼠标左键))
            临时特效.坐标 ＝ 150 ＋ 50 × (选项 － 1)
            加入成员 (选中特效, 临时特效)
            .如果 (鼠标左键选项 ＝ 选项)

            .否则
                鼠标左键选项 ＝ 选项
                鼠标左键计时 ＝ 0
            .如果结束

        .否则

        .如果结束
        .如果真 (引擎.键_取选中 (#鼠标左键) 且 鼠标左键计时 ＞ 1 且 鼠标左键选项 ＝ 选项)
            更换按键事件 ＝ 真
            更换按键判断 ＝ 3

        .如果真结束

    .否则

    .如果结束
    选项 ＝ 4
    .如果 (判断是否进入区域 (175 × 分辨率缩放倍率, 分辨率.窗口宽度, 101 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 按钮滑动偏移, 100 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 50 × 分辨率缩放倍率 ＋ 按钮滑动偏移) ＝ 真)
        .如果 (引擎.键_取选中 (#鼠标左键))
            临时特效.坐标 ＝ 150 ＋ 50 × (选项 － 1)
            加入成员 (选中特效, 临时特效)
            .如果 (鼠标左键选项 ＝ 选项)

            .否则
                鼠标左键选项 ＝ 选项
                鼠标左键计时 ＝ 0
            .如果结束

        .否则

        .如果结束
        .如果真 (引擎.键_取选中 (#鼠标左键) 且 鼠标左键计时 ＞ 1 且 鼠标左键选项 ＝ 选项)
            更换按键事件 ＝ 真
            更换按键判断 ＝ 4

        .如果真结束

    .否则

    .如果结束
    选项 ＝ 6
    .如果 (判断是否进入区域 (175 × 分辨率缩放倍率, 分辨率.窗口宽度, 101 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 按钮滑动偏移, 100 × 分辨率缩放倍率 ＋ 50 × 分辨率缩放倍率 × 选项 ＋ 50 × 分辨率缩放倍率 ＋ 按钮滑动偏移) ＝ 真)
        .如果 (引擎.键_取选中 (#鼠标左键))
            临时特效.坐标 ＝ 150 ＋ 50 × (选项 － 1)
            加入成员 (选中特效, 临时特效)
            .如果 (鼠标左键选项 ＝ 选项)

            .否则
                鼠标左键选项 ＝ 选项
                鼠标左键计时 ＝ 0
            .如果结束

        .否则

        .如果结束
        .如果真 (引擎.键_取选中 (#鼠标左键) 且 鼠标左键计时 ＞ 1 且 鼠标左键选项 ＝ 选项)
            更换按键事件 ＝ 真
            更换按键判断 ＝ 5

        .如果真结束

    .否则

    .如果结束


.如果真结束

.如果 (引擎.键_取选中 (#鼠标左键))
    鼠标左键计时 ＝ 鼠标左键计时 ＋ 引擎.取最后帧时间 ()
.否则
    鼠标左键计时 ＝ 0
    鼠标左键选项 ＝ 0
.如果结束


.子程序 更换按键逻辑
.局部变量 最后按键记录, 整数型


.如果 (更换按键事件 ＝ 真)
    最后按键记录 ＝ 引擎.键_取键值 ()
    .如果 (最后按键记录 ＝ #鼠标左键 或 最后按键记录 ＝ #鼠标右键)

    .否则
        .如果真 (最后按键记录 ≠ 0)
            .判断开始 (更换按键判断 ＝ 1)
                按键蓝1 ＝ 最后按键记录
                更换按键事件 ＝ 假
                写配置项 (取运行目录 () ＋ “\Config.ini”, “Control”, “LiftBlue”, 到文本 (最后按键记录))
                加入通知 (“按键更换”, “已将按键更换为” ＋ 引擎.键_取键名 (最后按键记录) ＋ “键”)
            .判断 (更换按键判断 ＝ 2)
                按键蓝2 ＝ 最后按键记录
                更换按键事件 ＝ 假
                写配置项 (取运行目录 () ＋ “\Config.ini”, “Control”, “RlghtBlue”, 到文本 (最后按键记录))
                加入通知 (“按键更换”, “已将按键更换为” ＋ 引擎.键_取键名 (最后按键记录) ＋ “键”)
            .判断 (更换按键判断 ＝ 3)
                按键红1 ＝ 最后按键记录
                更换按键事件 ＝ 假
                写配置项 (取运行目录 () ＋ “\Config.ini”, “Control”, “LeftRed”, 到文本 (最后按键记录))
                加入通知 (“按键更换”, “已将按键更换为” ＋ 引擎.键_取键名 (最后按键记录) ＋ “键”)
            .判断 (更换按键判断 ＝ 4)
                按键红2 ＝ 最后按键记录
                更换按键事件 ＝ 假
                写配置项 (取运行目录 () ＋ “\Config.ini”, “Control”, “RightRed”, 到文本 (最后按键记录))
                加入通知 (“按键更换”, “已将按键更换为” ＋ 引擎.键_取键名 (最后按键记录) ＋ “键”)
            .判断 (更换按键判断 ＝ 5)
                暂停按键 ＝ 最后按键记录
                更换按键事件 ＝ 假
                写配置项 (取运行目录 () ＋ “\Config.ini”, “Control”, “Esc”, 到文本 (最后按键记录))
                加入通知 (“按键更换”, “已将按键更换为” ＋ 引擎.键_取键名 (最后按键记录) ＋ “键”)
            .默认

            .判断结束

        .如果真结束

    .如果结束

.否则

.如果结束


.子程序 设置界面调试

.如果真 (按钮页面 ＝ 2 且 当前窗口 ＝ “Setting”)
    全局音量方盒.显示 ()
    音乐音量方盒.显示 ()
    音效音量方盒.显示 ()
    Offset滑块方盒.显示 ()
.如果真结束


.子程序 滑动逻辑
.局部变量 计数, 小数型, 静态

滑块坐标2 ＝ 0 － 按钮滑动偏移 ÷ (按钮滑动尽头 ÷ 445)

.如果 (判断是否进入区域 (176 × 分辨率缩放倍率, 分辨率.窗口宽度, 74 × 分辨率缩放倍率, 分辨率.窗口高度))
    .如果 (按钮滑动偏移设定 ＋ 引擎.键_取滚轮事件 () × 20 ＜ 0 － 按钮滑动尽头)
        .如果 (按钮滑动偏移设定 ＋ 引擎.键_取滚轮事件 () × 20 ≤ 0 － 按钮滑动尽头 － 100)
            按钮滑动偏移设定 ＝ 0 － 按钮滑动尽头 － 100
        .否则
            按钮滑动偏移设定 ＝ 按钮滑动偏移设定 ＋ 引擎.键_取滚轮事件 () × 20
        .如果结束

    .否则
        .如果 (按钮滑动偏移设定 ＋ 引擎.键_取滚轮事件 () × 20 ＞ 0)
            .如果 (按钮滑动偏移设定 ＋ 引擎.键_取滚轮事件 () × 20 ≥ 100)
                按钮滑动偏移设定 ＝ 100
            .否则
                按钮滑动偏移设定 ＝ 按钮滑动偏移设定 ＋ 引擎.键_取滚轮事件 () × 20
            .如果结束

        .否则
            按钮滑动偏移设定 ＝ 按钮滑动偏移设定 ＋ 引擎.键_取滚轮事件 () × 20
        .如果结束

    .如果结束


.否则

.如果结束
.如果 (按钮滑动偏移设定 ＞ 0)

    .如果 (计数 ≥ 0.3)
        按钮滑动偏移设定 ＝ 0
        计数 ＝ 0
    .否则
        计数 ＝ 计数 ＋ 引擎.取最后帧时间 ()
    .如果结束

.否则

.如果结束

.如果 (按钮滑动偏移设定 ＜ 0 － 按钮滑动尽头)

    .如果 (计数 ≥ 0.3)
        按钮滑动偏移设定 ＝ 0 － 按钮滑动尽头
        计数 ＝ 0
    .否则
        计数 ＝ 计数 ＋ 引擎.取最后帧时间 ()
    .如果结束

.否则

.如果结束
.如果 (按钮滑动偏移设定 ＜ 0 且 按钮滑动偏移设定 ＞ 0 － 按钮滑动尽头)
    计数 ＝ 0
.否则

.如果结束
按钮滑动偏移 ＝ 加速度公式 (按钮滑动偏移, 按钮滑动偏移设定, 0.6, 0.3)


.子程序 边栏按钮渲染
.局部变量 透明度, 整数型, 静态
.局部变量 鼠标选项透明度, 整数型, 静态
.局部变量 位移差值, 小数型
.局部变量 重置鼠标边栏, 逻辑型, 静态

选择钮文字.置颜色 (ARGB (255, 255, 255, 255))
选择钮精灵.置透明度 (255)
选中边栏精灵.置透明度 (255)

.如果 (判断是否进入区域 (0, 176 × 分辨率缩放倍率, 74 × 分辨率缩放倍率, 分辨率.窗口高度))
    .如果 (透明度 ＋ 帧率数据处理 (5) ≥ 255)
        透明度 ＝ 255
    .否则
        透明度 ＝ 透明度 ＋ 帧率数据处理 (5)
    .如果结束

.否则
    .如果 (透明度 － 帧率数据处理 (5) ≤ 150)
        透明度 ＝ 150
    .否则
        透明度 ＝ 透明度 － 帧率数据处理 (5)
    .如果结束

.如果结束



.如果 (判断是否进入区域 (0, 150 × 分辨率缩放倍率, 74 × 分辨率缩放倍率, 360 × 分辨率缩放倍率))
    .判断开始 (判断是否进入区域 (0 × 分辨率缩放倍率, 150 × 分辨率缩放倍率, 100 × 分辨率缩放倍率, 140 × 分辨率缩放倍率) ＝ 真)
        鼠标所在项 ＝ 0
    .判断 (判断是否进入区域 (0 × 分辨率缩放倍率, 150 × 分辨率缩放倍率, 150 × 分辨率缩放倍率, 190 × 分辨率缩放倍率) ＝ 真)
        鼠标所在项 ＝ 1
    .判断 (判断是否进入区域 (0 × 分辨率缩放倍率, 150 × 分辨率缩放倍率, 200 × 分辨率缩放倍率, 240 × 分辨率缩放倍率) ＝ 真)
        鼠标所在项 ＝ 2
    .判断 (判断是否进入区域 (0 × 分辨率缩放倍率, 150 × 分辨率缩放倍率, 250 × 分辨率缩放倍率, 290 × 分辨率缩放倍率) ＝ 真)
        鼠标所在项 ＝ 3
    .判断 (判断是否进入区域 (0 × 分辨率缩放倍率, 150 × 分辨率缩放倍率, 300 × 分辨率缩放倍率, 340 × 分辨率缩放倍率) ＝ 真)
        鼠标所在项 ＝ 4
    .默认

    .判断结束

    .如果 (重置鼠标边栏 ＝ 真)
        鼠标边栏位移 ＝ (100 ＋ 鼠标所在项 × 50) × 分辨率缩放倍率
        重置鼠标边栏 ＝ 假
    .否则

        位移差值 ＝ (100 ＋ 鼠标所在项 × 50) × 分辨率缩放倍率 － 鼠标边栏位移
        鼠标边栏位移 ＝ 鼠标边栏位移 ＋ 帧率数据处理 (位移差值 × 0.2)


    .如果结束

    .如果 (鼠标选项透明度 ＋ 帧率数据处理 (10) ≥ 100)
        鼠标选项透明度 ＝ 100
    .否则
        鼠标选项透明度 ＝ 鼠标选项透明度 ＋ 帧率数据处理 (10)

    .如果结束

.否则
    .如果 (鼠标选项透明度 － 帧率数据处理 (10) ≤ 0)
        鼠标选项透明度 ＝ 0
        重置鼠标边栏 ＝ 真
    .否则
        鼠标选项透明度 ＝ 鼠标选项透明度 － 帧率数据处理 (10)
    .如果结束

.如果结束
引擎.画实心矩形 (0, 鼠标边栏位移, 152 × 分辨率缩放倍率, 鼠标边栏位移 ＋ 40 × 分辨率缩放倍率, ARGB (鼠标选项透明度, 255, 255, 255))
引擎.画实心矩形 (0, 边栏位移, 152 × 分辨率缩放倍率, 边栏位移 ＋ 40 × 分辨率缩放倍率, ARGB (透明度, 14, 89, 142))
选择钮文字.显示 (40 × 分辨率缩放倍率, 108 × 分辨率缩放倍率, “常规”)
选择钮文字.显示 (40 × 分辨率缩放倍率, 158 × 分辨率缩放倍率, “视频”)
选择钮文字.显示 (40 × 分辨率缩放倍率, 208 × 分辨率缩放倍率, “声音”)
选择钮文字.显示 (40 × 分辨率缩放倍率, 258 × 分辨率缩放倍率, “按键”)
选择钮文字.显示 (40 × 分辨率缩放倍率, 308 × 分辨率缩放倍率, “关于”)

.子程序 黑色背景逻辑

.如果 (输入框开关 ＝ 真)
    .如果 (黑色背景透明度 ＋ 帧率数据处理 (20) ≥ 100)
        黑色背景透明度 ＝ 100
    .否则
        黑色背景透明度 ＝ 黑色背景透明度 ＋ 帧率数据处理 (20)
    .如果结束

.否则
    .如果 (黑色背景透明度 － 帧率数据处理 (20) ≤ 0)
        黑色背景透明度 ＝ 0
    .否则
        黑色背景透明度 ＝ 黑色背景透明度 － 帧率数据处理 (20)
    .如果结束

.如果结束
黑色背景.置透明度 (黑色背景透明度)

.子程序 取按键设定, 文本型
.参数 类型, 整数型
.局部变量 按键文本, 整数型

.判断开始 (类型 ＝ 1)
    按键文本 ＝ 按键蓝1
.判断 (类型 ＝ 2)
    按键文本 ＝ 按键蓝2
.判断 (类型 ＝ 3)
    按键文本 ＝ 按键红1
.判断 (类型 ＝ 4)
    按键文本 ＝ 按键红2
.判断 (类型 ＝ 5)
    按键文本 ＝ 暂停按键

.默认

.判断结束

返回 (引擎.键_取键名 (按键文本))
