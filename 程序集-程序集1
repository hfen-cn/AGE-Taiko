.版本 2

.程序集 程序集1
.程序集变量 柔化滤镜, 整数型

.子程序 _启动子程序, 整数型, , 本子程序在程序启动后最先执行
.局部变量 屏幕, Tp_窗口
.局部变量 刷新率, 整数型

检查文件 ()
载入 (窗口1, , 假)
BASS_Init (-1, 44100, 4, 窗口句柄, 0)
屏幕.逻辑函数 ＝ &逻辑
屏幕.渲染函数 ＝ &渲染
屏幕.退出函数 ＝ &退出程序
屏幕.后台运行 ＝ 真
屏幕.隐藏鼠标 ＝ 真
分辨率设定 ()
屏幕.高 ＝ 分辨率.窗口高度
屏幕.宽 ＝ 分辨率.窗口宽度
' 屏幕.渲染区遗失函数 ＝ &渲染区遗失
设定读取 ()
屏幕.标题 ＝ #游戏标题 ＋ “ ” ＋ #版本号
遮罩切换_无执行 (“UI”, 10, 真)
屏幕.帧率 ＝ 200
引擎.创建 (屏幕, 真)
创建时钟 (窗口句柄, 1, 1, &取播放时间)
写到文件 (取运行目录 () ＋ “\Skins\Logo.ico”, #游戏LOGO)
引擎.置图标 (取运行目录 () ＋ “\Skins\Logo.ico”)
着色器 ()
音乐BPM ＝ 120
调试信息.创建 (“宋体”, 13, 假, 假, 假, #颜色_白)
游戏初始化 ()
UI初始化 ()
界面类初始化 ()
置随机数种子 ()
调试 ()
引擎.启动 ()
引擎.销毁 ()
返回 (0)  ' 可以根据您的需要返回任意数值

.子程序 分辨率设定

分辨率.窗口高度 ＝ 600
分辨率.窗口宽度 ＝ 1024
分辨率.Bar缩放 ＝ 2
分辨率.logo位置 ＝ 分辨率.窗口宽度 ÷ 2
分辨率.弹出太鼓1 ＝ 1050
分辨率.弹出太鼓2 ＝ 0.00025
分辨率.弹出太鼓3 ＝ 40
分辨率.遮罩缩放X ＝ 6
分辨率.遮罩缩放Y ＝ 6
.判断开始 (读配置项 (取运行目录 () ＋ “\Config.ini”, “Display”, “Resolution”, ) ＝ “1024*600”)
    分辨率.窗口高度 ＝ 600
    分辨率.窗口宽度 ＝ 1024
    分辨率.Bar缩放 ＝ 2
    分辨率.logo位置 ＝ 分辨率.窗口宽度 ÷ 2
    分辨率.弹出太鼓1 ＝ 1050
    分辨率.弹出太鼓2 ＝ 0.00025
    分辨率.弹出太鼓3 ＝ 40
    分辨率.遮罩缩放X ＝ 6
    分辨率.遮罩缩放Y ＝ 6
.判断 (读配置项 (取运行目录 () ＋ “\Config.ini”, “Display”, “Resolution”, ) ＝ “800*600”)
    分辨率.窗口高度 ＝ 600
    分辨率.窗口宽度 ＝ 800
    分辨率.Bar缩放 ＝ 1
    分辨率.logo位置 ＝ 分辨率.窗口宽度 ÷ 2
    分辨率.弹出太鼓1 ＝ 1050
    分辨率.弹出太鼓2 ＝ 0.00032
    分辨率.弹出太鼓3 ＝ 10
    分辨率.遮罩缩放X ＝ 4
    分辨率.遮罩缩放Y ＝ 4
.默认

.判断结束


.子程序 退出程序, 文本型

.如果真 (是否已创建 (窗口1) ＝ 真)
    窗口1.销毁 ()
.如果真结束
返回 (“true”)

.子程序 调试

自动模式 ＝ 真
.如果 (读配置项 (取运行目录 () ＋ “\Config.ini”, “MOD”, “LightMod”, ) ＝ “1”)
    MOD开关.灯光MOD ＝ 真
.否则

.如果结束


.子程序 着色器

.如果 (读配置项 (取运行目录 () ＋ “\Config.ini”, “Shader”, “Switch”, ) ＝ “1”)
    开关.着色器 ＝ 真
    .如果 (读配置项 (取运行目录 () ＋ “\Config.ini”, “Shader”, “Soften”, ) ＝ “1”)
        开关.柔化滤镜 ＝ 真
        柔化滤镜 ＝ 引擎.着色_创建 (#柔化滤镜)
    .否则

    .如果结束

.否则
.如果结束


.子程序 设定读取

.如果 (读配置项 (取运行目录 () ＋ “\Config.ini”, “Debug”, “Debug”, ) ＝ “1”)
    调试信息显示 ＝ 真
.否则

.如果结束


.子程序 逻辑, 逻辑型

.如果 (当前窗口 ＝ “太鼓游戏”)
    游戏逻辑 ()
.否则

.如果结束
.如果 (当前窗口 ＝ “UI”)
    UI逻辑 ()
.否则

.如果结束
鼠标取坐标 ()
返回 (假)


.子程序 渲染, 逻辑型

.如果真 (MOD开关.灯光MOD ＝ 真)
    灯光渲染区渲染 ()
.如果真结束

引擎.渲染开始 ()
引擎.清屏 ()
着色器类 ()
.如果 (当前窗口 ＝ “太鼓游戏”)
    游戏渲染 ()
.否则

.如果结束
.如果 (当前窗口 ＝ “UI”)
    ui渲染 ()
.否则

.如果结束
遮盖显示 ()
.如果 (调试信息显示 ＝ 真)
    调试信息显示 ()
.否则

.如果结束
引擎.渲染结束 ()
返回 (假)



.子程序 着色器类
.局部变量 n, 整数型

.如果 (开关.着色器 ＝ 真)
    .判断开始 (开关.柔化滤镜 ＝ 真)
        引擎.着色_设置 (柔化滤镜)
    .默认

    .判断结束

.否则
.如果结束


.子程序 渲染区遗失, 逻辑型

灯光渲染区遗失 ()
返回 (假)

.子程序 调试信息显示
.局部变量 系统环境, 文本型

.判断开始 (系统_取版本 () ＝ 5.1)
    系统环境 ＝ “Windows XP”
.判断 (系统_取版本 () ＝ 6)
    系统环境 ＝ “Windows Vista”
.判断 (系统_取版本 () ＝ 6.1)
    系统环境 ＝ “Windows 7”
.判断 (系统_取版本 () ＝ 6.2)
    系统环境 ＝ “Windows 8”
.默认

.判断结束
调试信息.置颜色 (#颜色_黑)
调试信息.显示 (11, 10, “当前FPS：” ＋ 到文本 (引擎.取FPS ()) ＋ #换行符 ＋ “窗口分辨率：” ＋ 到文本 (引擎.取窗口宽 ()) ＋ “× ” ＋ 到文本 (引擎.取窗口高 ()) ＋ #换行符 ＋ “引擎最后帧时间：” ＋ 到文本 (引擎.取最后帧时间 ()) ＋ #换行符 ＋ “游戏已运行：” ＋ 到文本 (取整 (引擎.取运行时间 ())) ＋ “秒” ＋ #换行符 ＋ “运行环境：” ＋ 系统环境)
调试信息.显示 (10, 11, “当前FPS：” ＋ 到文本 (引擎.取FPS ()) ＋ #换行符 ＋ “窗口分辨率：” ＋ 到文本 (引擎.取窗口宽 ()) ＋ “× ” ＋ 到文本 (引擎.取窗口高 ()) ＋ #换行符 ＋ “引擎最后帧时间：” ＋ 到文本 (引擎.取最后帧时间 ()) ＋ #换行符 ＋ “游戏已运行：” ＋ 到文本 (取整 (引擎.取运行时间 ())) ＋ “秒” ＋ #换行符 ＋ “运行环境：” ＋ 系统环境)
调试信息.显示 (9, 10, “当前FPS：” ＋ 到文本 (引擎.取FPS ()) ＋ #换行符 ＋ “窗口分辨率：” ＋ 到文本 (引擎.取窗口宽 ()) ＋ “× ” ＋ 到文本 (引擎.取窗口高 ()) ＋ #换行符 ＋ “引擎最后帧时间：” ＋ 到文本 (引擎.取最后帧时间 ()) ＋ #换行符 ＋ “游戏已运行：” ＋ 到文本 (取整 (引擎.取运行时间 ())) ＋ “秒” ＋ #换行符 ＋ “运行环境：” ＋ 系统环境)
调试信息.显示 (10, 9, “当前FPS：” ＋ 到文本 (引擎.取FPS ()) ＋ #换行符 ＋ “窗口分辨率：” ＋ 到文本 (引擎.取窗口宽 ()) ＋ “× ” ＋ 到文本 (引擎.取窗口高 ()) ＋ #换行符 ＋ “引擎最后帧时间：” ＋ 到文本 (引擎.取最后帧时间 ()) ＋ #换行符 ＋ “游戏已运行：” ＋ 到文本 (取整 (引擎.取运行时间 ())) ＋ “秒” ＋ #换行符 ＋ “运行环境：” ＋ 系统环境)
调试信息.置颜色 (#颜色_白)
调试信息.显示 (10, 10, “当前FPS：” ＋ 到文本 (引擎.取FPS ()) ＋ #换行符 ＋ “窗口分辨率：” ＋ 到文本 (引擎.取窗口宽 ()) ＋ “× ” ＋ 到文本 (引擎.取窗口高 ()) ＋ #换行符 ＋ “引擎最后帧时间：” ＋ 到文本 (引擎.取最后帧时间 ()) ＋ #换行符 ＋ “游戏已运行：” ＋ 到文本 (取整 (引擎.取运行时间 ())) ＋ “秒” ＋ #换行符 ＋ “运行环境：” ＋ 系统环境)
