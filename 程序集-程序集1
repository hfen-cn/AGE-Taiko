.版本 2

.程序集 程序集1
.程序集变量 柔化滤镜, 整数型
.程序集变量 游戏渲染区, 整数型
.程序集变量 选歌列表渲染区, 整数型
.程序集变量 游戏渲染区精灵, Age_精灵
.程序集变量 选歌列表渲染区精灵, Age_精灵
.程序集变量 渲染区震荡特效, 震荡特效, , "0"
.程序集变量 渲染区透明度, 整数型
.程序集变量 声音窗口焦点, 逻辑型
.程序集变量 图像处理, Age_图像处理
.程序集变量 模糊渲染区, Age_精灵
.程序集变量 出错文字, Age_文字
.程序集变量 出错文字2, Age_文字

.子程序 _启动子程序, 整数型, , 本子程序在程序启动后最先执行
.局部变量 屏幕, Tp_窗口
.局部变量 刷新率, 整数型

控制台文本 ＝ “Rabbit Game Console ” ＋ #RBC ＋ #换行符 ＋ “T-Aiko HD ” ＋ #版本号 ＋ #换行符 ＋ #换行符
检查文件 ()
函数初始化 ()
无法启动游戏检测 ()
置随机数种子 ()
读取音乐 ()
写配置项 (取运行目录 () ＋ “\Config.ini”, “Game”, “Start”, “2”)
BASS_Init (-1, 44100, 4, 窗口句柄, 0)
.如果 (载入出错 ＝ 真)
    屏幕.逻辑函数 ＝ &出错逻辑
    屏幕.渲染函数 ＝ &出错渲染
    屏幕.隐藏鼠标 ＝ 假
.否则
    屏幕.逻辑函数 ＝ &逻辑
    屏幕.渲染函数 ＝ &渲染
    屏幕.隐藏鼠标 ＝ 真
.如果结束

屏幕.退出函数 ＝ &退出程序
屏幕.后台运行 ＝ 真
屏幕.帧率 ＝ 取显示器刷新率 ()
屏幕.标题 ＝ #游戏标题 ＋ “ ” ＋ #版本号
分辨率设定 ()
缩放倍率计算 ()
屏幕.高 ＝ 分辨率.窗口高度
屏幕.宽 ＝ 分辨率.窗口宽度
屏幕.渲染遗失函数 ＝ &渲染区遗失
设定读取 ()
遮罩切换_无执行 (“Welcome”, 10, 真)
写配置项 (取运行目录 () ＋ “\Config.ini”, “Game”, “Start”, “3”)
引擎.创建 (屏幕, 窗口模式)
.如果 (载入出错 ＝ 真)
    出错文字.创建 (“黑体”, 24 × 分辨率缩放倍率, 假, 假, 真, #颜色_白)
    出错文字2.创建 (“微软雅黑”, 60 × 分辨率缩放倍率, 假, 假, 真, #颜色_白)

.否则

    游戏渲染区 ＝ 引擎.创建渲染区 (屏幕.宽, 屏幕.高, 假)
    选歌列表渲染区 ＝ 引擎.创建渲染区 (屏幕.宽, 屏幕.高, 假)
    游戏模糊渲染区 ＝ 引擎.创建渲染区 (屏幕.宽, 350 × 分辨率缩放倍率, 假)
    模糊动画渲染区 ＝ 引擎.创建渲染区 (屏幕.宽, 350 × 分辨率缩放倍率, 假)
    写配置项 (取运行目录 () ＋ “\Config.ini”, “Game”, “Start”, “4”)
    游戏渲染区精灵.创建 (引擎.取渲染区纹理 (游戏渲染区), 0, 0, 屏幕.宽, 屏幕.高)
    毛玻璃精灵.创建 (引擎.取渲染区纹理 (游戏模糊渲染区), 0, －(350 － 155) × 分辨率缩放倍率, 屏幕.宽, (350 － 155) × 分辨率缩放倍率)
    毛玻璃动画精灵.创建 (引擎.取渲染区纹理 (模糊动画渲染区), 0, 0, 800, 350 － 155)
    毛玻璃动画精灵.置中心 (400, 0)
    模糊渲染区.创建 (0, 0, 0, 屏幕.宽, 屏幕.高)
    选歌列表渲染区精灵.创建 (引擎.取渲染区纹理 (选歌列表渲染区), 0, 80 × 分辨率缩放倍率, 屏幕.宽, 屏幕.高 － 80 × 分辨率缩放倍率)
    选歌列表渲染区精灵.置混合模式 (#混合_Zwrite)
    创建时钟 (窗口句柄, 1, 1, &取播放时间)
    创建时钟 (窗口句柄, 2, 1, &片头曲循环)
    引擎.置图标_字节集 (#游戏LOGO)
    写配置项 (取运行目录 () ＋ “\Config.ini”, “Game”, “Start”, “5”)
    调试信息.创建 (“黑体”, 13 × 分辨率缩放倍率, 假, 假, 真, #颜色_白)
    关于文本行数初始化 ()
    Welcome初始化 ()
    按键初始化 ()
    游戏初始化 ()
    UI初始化 ()
    界面类初始化 ()
    设置界面初始化 ()
    计分界面初始化 ()
    置随机数种子 ()
    RGC对话框初始化 ()
    通知系统初始化 ()
    写配置项 (取运行目录 () ＋ “\Config.ini”, “Game”, “Start”, “6”)
    引擎.销毁所有zip ()
    连接服务器 ()
.如果结束


引擎.启动 ()
引擎.销毁 ()


返回 (0)  ' 可根据您的需要返回任意数值

.子程序 空程序, 逻辑型

返回 (假)

.子程序 UI动态声音调节

.如果 (API_GetActiveWindow () ＝ 引擎.取窗口句柄 ())
    .判断开始 (当前窗口 ＝ “UI” 或 当前窗口 ＝ “Welcome”)
        .如果 (UI音效动态音量 ＋ 5 ≥ 100)
            UI音效动态音量 ＝ 100
        .否则
            UI音效动态音量 ＝ UI音效动态音量 ＋ 5
        .如果结束

    .判断 (当前窗口 ＝ “Setting” 且 取设置界面边栏选中项 () ＝ 2)
        .如果 (UI音效动态音量 ＋ 5 ≥ 100)
            UI音效动态音量 ＝ 100
        .否则
            UI音效动态音量 ＝ UI音效动态音量 ＋ 5
        .如果结束

    .判断 (当前窗口 ＝ “Setting” 且 取设置界面边栏选中项 () ≠ 2)
        .如果 (UI音效动态音量 － 5 ≤ 30)
            UI音效动态音量 ＝ 30
        .否则
            UI音效动态音量 ＝ UI音效动态音量 － 5
        .如果结束

    .判断 (当前窗口 ＝ “计分”)
        .如果 (UI音效动态音量 － 5 ≤ 30)
            UI音效动态音量 ＝ 30
        .否则
            UI音效动态音量 ＝ UI音效动态音量 － 5
        .如果结束

    .默认
        .如果 (UI音效动态音量 － 5 ≤ 0)
            UI音效动态音量 ＝ 0
            BASS_ChannelPause (播放句柄)
        .否则
            UI音效动态音量 ＝ UI音效动态音量 － 5
        .如果结束

    .判断结束

.否则
    .如果 (声音窗口焦点 ＝ 假)

    .否则
        .判断开始 (当前窗口 ＝ “太鼓游戏”)
            .如果 (UI音效动态音量 － 5 ≤ 0)
                UI音效动态音量 ＝ 0
                BASS_ChannelPause (播放句柄)
            .否则
                UI音效动态音量 ＝ UI音效动态音量 － 5
            .如果结束

        .默认
            .如果 (UI音效动态音量 － 5 ≤ 30)
                UI音效动态音量 ＝ 30
            .否则
                UI音效动态音量 ＝ UI音效动态音量 － 5
            .如果结束

        .判断结束

    .如果结束

.如果结束





.子程序 无法启动游戏检测
.局部变量 配置, 文本型

配置 ＝ 读配置项 (取运行目录 () ＋ “\Config.ini”, “Game”, “Start”, )
.如果 (文件是否存在 (取运行目录 () ＋ “/Log/logcat.rlg”))
    ' 文件更名 (取运行目录 () ＋ “/Log/logcat.rlg”, 取运行目录 () ＋ “/Log/log” ＋ 到文本 (取当前时间_分离 ().日) ＋ 到文本 (取当前时间_分离 ().时) ＋ 到文本 (取当前时间_分离 ().分) ＋ 到文本 (取当前时间_分离 ().秒) ＋ “.rlg”)
.否则

.如果结束
.如果 (配置 ＝ “0”)

.否则
    .如果真 (配置 ＝ “3”)
        信息框 (“检测到您上一次无法启动游戏！” ＋ #换行符 ＋ “错误代码：” ＋ 配置 ＋ #换行符 ＋ “游戏引擎启动错误！”, #警告图标, “Rabbit Game Console”)
        .如果 (信息框 (“是否尝试修复此问题？”, #信息图标 ＋ #是否钮, “Rabbit Game Console”) ＝ 5)
            写配置项 (取运行目录 () ＋ “\Config.ini”, “Display”, “ResolutionY”, “600”)
            写配置项 (取运行目录 () ＋ “\Config.ini”, “Display”, “ResolutionX”, “1024”)
            写配置项 (取运行目录 () ＋ “\Config.ini”, “Display”, “Windows”, “1”)
        .否则

        .如果结束

    .如果真结束
    .如果真 (配置 ＝ “6”)
        ' 信息框 (“检测到您上一次无法启动游戏！” ＋ #换行符 ＋ “错误代码：” ＋ 配置 ＋ #换行符 ＋ “游戏已经启动成功！但是运行过程出现了错误！您可以将rlg文件反馈给我们进行分析！”, #警告图标, “Rabbit Game Console”)
    .如果真结束

.如果结束


.子程序 按键初始化

按键红1 ＝ 到整数 (读配置项 (取运行目录 () ＋ “\Config.ini”, “Control”, “LeftRed”, ))
按键红2 ＝ 到整数 (读配置项 (取运行目录 () ＋ “\Config.ini”, “Control”, “RightRed”, ))
按键蓝1 ＝ 到整数 (读配置项 (取运行目录 () ＋ “\Config.ini”, “Control”, “LiftBlue”, ))
按键蓝2 ＝ 到整数 (读配置项 (取运行目录 () ＋ “\Config.ini”, “Control”, “RlghtBlue”, ))
暂停按键 ＝ 到整数 (读配置项 (取运行目录 () ＋ “\Config.ini”, “Control”, “Esc”, ))
加入控制台文本 (“Set LeftRedKey-->” ＋ 到文本 (按键红1))
加入控制台文本 (“Set RightRedKey-->” ＋ 到文本 (按键红2))
加入控制台文本 (“Set LeftBlueKey-->” ＋ 到文本 (按键蓝1))
加入控制台文本 (“Set RightBlueKey-->” ＋ 到文本 (按键蓝2))
加入控制台文本 (“Set EscKey-->” ＋ 到文本 (暂停按键))

.子程序 分辨率设定

分辨率.窗口高度 ＝ 600
分辨率.窗口宽度 ＝ 1024
.如果 (到小数 (读配置项 (取运行目录 () ＋ “\Config.ini”, “Display”, “ResolutionY”, )) ＝ 0)

.否则
    分辨率.窗口高度 ＝ 到小数 (读配置项 (取运行目录 () ＋ “\Config.ini”, “Display”, “ResolutionY”, ))
.如果结束
.如果 (到小数 (读配置项 (取运行目录 () ＋ “\Config.ini”, “Display”, “ResolutionX”, )) ＝ 0)

.否则
    分辨率.窗口宽度 ＝ 到小数 (读配置项 (取运行目录 () ＋ “\Config.ini”, “Display”, “ResolutionX”, ))
.如果结束

.如果 (分辨率.窗口宽度 ＞ 取屏幕宽度 () 且 分辨率.窗口高度 ＞ 取屏幕高度 () 且 读配置项 (取运行目录 () ＋ “\Config.ini”, “Display”, “LR”, ) ＝ “1”)
    分辨率.窗口宽度 ＝ 取屏幕宽度 ()
    分辨率.窗口高度 ＝ 取屏幕高度 ()
.否则

.如果结束
分辨率.logo位置 ＝ 分辨率.窗口宽度 ÷ 2

.子程序 退出程序, 逻辑型

写配置项 (取运行目录 () ＋ “\Config.ini”, “Game”, “Start”, “0”)
删除文件 (取运行目录 () ＋ “/Log/logcat.rlg”)
返回 (真)

.子程序 设定读取

.如果 (文件是否存在 (取运行目录 () ＋ “/Log”) ＝ 假)
    创建目录 (取运行目录 () ＋ “/Log”)
.否则

.如果结束
.如果 (读配置项 (取运行目录 () ＋ “\Config.ini”, “Debug”, “Debug”, ) ＝ “1”)
    调试信息显示 ＝ 真
.否则

.如果结束
.如果 (读配置项 (取运行目录 () ＋ “\Config.ini”, “Game”, “Auto”, ) ＝ “1”)
    自动模式 ＝ 真
.否则

.如果结束
.如果 (读配置项 (取运行目录 () ＋ “\Config.ini”, “MOD”, “LightMod”, ) ＝ “1”)
    MOD开关.灯光MOD ＝ 真
.否则

.如果结束
.如果 (读配置项 (取运行目录 () ＋ “\Config.ini”, “effect”, “FlashH”, ) ＝ “1”)
    开关.魂满闪光 ＝ 真
.否则

.如果结束
.如果 (读配置项 (取运行目录 () ＋ “\Config.ini”, “effect”, “Shock”, ) ＝ “1”)
    视频开关.UIGOGO特效 ＝ 真
.否则

.如果结束
.如果 (读配置项 (取运行目录 () ＋ “\Config.ini”, “Display”, “Windows”, ) ＝ “1”)
    窗口模式 ＝ 真
.否则
    窗口模式 ＝ 真
.如果结束
.如果 (读配置项 (取运行目录 () ＋ “\Config.ini”, “Game”, “Soundfocus”, ) ＝ “1”)
    声音窗口焦点 ＝ 真
.否则
    声音窗口焦点 ＝ 假
.如果结束
.如果 (读配置项 (取运行目录 () ＋ “\Config.ini”, “Display”, “Fillet”, ) ＝ “1”)
    圆角 ＝ 真
.否则
    圆角 ＝ 假
.如果结束
.如果 (读配置项 (取运行目录 () ＋ “\Config.ini”, “Game”, “WelcomeMusic”, ) ＝ “1”)
    欢迎音乐 ＝ 真
    欢迎音乐总开关 ＝ 假
.否则
    欢迎音乐 ＝ 假
    欢迎音乐总开关 ＝ 真
.如果结束
.如果 (读配置项 (取运行目录 () ＋ “\Config.ini”, “Display”, “Game”, ) ＝ “1”)
    播放器模式 ＝ 假
.否则
    播放器模式 ＝ 真
.如果结束


音乐BPM ＝ 120
全局OFFSET ＝ 到小数 (读配置项 (取运行目录 () ＋ “\Config.ini”, “Game”, “Offset”, ))
全局音量 ＝ 到整数 (读配置项 (取运行目录 () ＋ “\Config.ini”, “Game”, “Volume”, ))
音效音量 ＝ 到整数 (读配置项 (取运行目录 () ＋ “\Config.ini”, “Game”, “SVolume”, ))
音乐音量 ＝ 到整数 (读配置项 (取运行目录 () ＋ “\Config.ini”, “Game”, “MVolume”, ))

.子程序 逻辑, 逻辑型

UI动态声音调节 ()
.如果真 (RGC对话框开关 ＝ 假)
    .如果 (当前窗口 ＝ “太鼓游戏”)
        游戏逻辑 ()
    .否则

    .如果结束
    .如果 (当前窗口 ＝ “UI”)
        UI逻辑 ()
    .否则

    .如果结束

    Welcome逻辑 ()

    .如果 (当前窗口 ＝ “Setting”)
        设置界面逻辑 ()
    .否则

    .如果结束
    .如果 (当前窗口 ＝ “计分”)
        计分界面逻辑 ()
    .否则

    .如果结束

.如果真结束

设定音乐音量 ()
鼠标取坐标 ()
控制台文本更新 ()
按钮设定对话框逻辑 ()
RGC对话框逻辑 ()
通知系统逻辑 ()
.如果 (引擎.键_取最后按键 () ＝ 0)

.否则
    加入控制台文本 (“按键按下，键代码：” ＋ 到文本 (引擎.键_取最后按键 ()))
.如果结束

返回 (假)


.子程序 控制台文本更新

' 写到文件 (取运行目录 () ＋ “/Log/logcat.rlg”, 到字节集 (控制台文本))
.如果 (是否已创建 (窗口2) ＝ 真)
    .如果 (窗口2.编辑框1.内容 ＝ 控制台文本)

    .否则
        窗口2.编辑框1.内容 ＝ 控制台文本
        窗口2.编辑框1.起始选择位置 ＝ -1

    .如果结束

.否则

.如果结束
.如果真 (引擎.键_取按下 (192))
    .如果真 (调试信息显示 ＝ 真)
        .如果真 (是否已创建 (窗口2) ＝ 假)
            载入 (窗口2, , 假)
        .如果真结束

    .如果真结束

.如果真结束




.子程序 加入控制台文本
.参数 文本, 文本型
.局部变量 Time, SYSTEMTIME
.局部变量 时, 文本型
.局部变量 分, 文本型
.局部变量 秒, 文本型

GetLocalTime (Time)
时 ＝ 到文本 (Time.wHour)
.如果真 (取文本长度 (时) ＜ 2)
    时 ＝ “0” ＋ 时
.如果真结束
分 ＝ 到文本 (Time.wMinute)
.如果真 (取文本长度 (分) ＜ 2)
    分 ＝ “0” ＋ 分
.如果真结束
秒 ＝ 到文本 (Time.wSecond)
.如果真 (取文本长度 (秒) ＜ 2)
    秒 ＝ “0” ＋ 秒
.如果真结束

控制台文本 ＝ 控制台文本 ＋ “[” ＋ 时 ＋ “:” ＋ 分 ＋ “:” ＋ 秒 ＋ “]” ＋ 文本 ＋ #换行符

.子程序 设定音乐音量

BASS_ChannelSetAttribute (按钮声音1.句柄, 2, 音效音量 ÷ 100 × 全局音量 ÷ 100)
BASS_ChannelSetAttribute (按钮声音2.句柄, 2, 音效音量 ÷ 100 × 全局音量 ÷ 100)
BASS_ChannelSetAttribute (返回音效, 2, 音效音量 ÷ 100 × 全局音量 ÷ 100)
BASS_ChannelSetAttribute (选项音效开, 2, 音效音量 ÷ 100 × 全局音量 ÷ 100)
BASS_ChannelSetAttribute (选项音效关, 2, 音效音量 ÷ 100 × 全局音量 ÷ 100)
BASS_ChannelSetAttribute (播放句柄, 2, 音乐音量 ÷ 100 × 全局音量 ÷ 100 × UI音效动态音量 ÷ 100)
BASS_ChannelSetAttribute (菜单打开音效, 2, 音效音量 ÷ 100 × 全局音量 ÷ 100)
BASS_ChannelSetAttribute (LOGO节奏音效, 2, 音效音量 ÷ 100 × 全局音量 ÷ 100)

游戏页面音效音量设定 ()
设置界面实时音量设定 ()

.子程序 渲染, 逻辑型
.局部变量 n, 整数型
.局部变量 窗口记录, 文本型, 静态


.如果真 (MOD开关.灯光MOD ＝ 真)
    灯光渲染区渲染 ()
.如果真结束
.如果真 (当前窗口 ＝ “太鼓游戏”)
    动画视频渲染区渲染 ()
    动画视频渲染区渲染毛玻璃 ()
    横幅渲染区渲染 ()
.如果真结束
引擎.渲染开始 (游戏模糊渲染区)
引擎.清屏 ()
游戏毛玻璃渲染 ()

引擎.渲染结束 ()

引擎.渲染开始 (游戏渲染区)

.如果 (窗口记录 ＝ 当前窗口)
    .如果真 (停止渲染 ＝ 假)
        .如果真 (RGC对话框开关 ＝ 假)
            引擎.清屏 ()
            .如果 (当前窗口 ＝ “太鼓游戏”)
                游戏渲染 ()

            .否则

            .如果结束
            .如果 (当前窗口 ＝ “UI”)
                ui渲染 ()

            .否则

            .如果结束
            .如果 (当前窗口 ＝ “Setting”)
                设置界面渲染 ()

            .否则

            .如果结束
            .如果 (当前窗口 ＝ “计分”)
                计分界面渲染 ()

            .否则

            .如果结束
            鼠标显示 ()
        .如果真结束

    .如果真结束


.否则
    窗口记录 ＝ 当前窗口
    引擎.清屏 ()
    .如果 (当前窗口 ＝ “太鼓游戏”)
        游戏渲染 ()

    .否则

    .如果结束
    .如果 (当前窗口 ＝ “UI”)
        ui渲染 ()

    .否则

    .如果结束
    .如果 (当前窗口 ＝ “Setting”)
        设置界面渲染 ()

    .否则

    .如果结束
    .如果 (当前窗口 ＝ “计分”)
        计分界面渲染 ()

    .否则

    .如果结束
    鼠标显示 ()
.如果结束



引擎.渲染结束 ()

选歌列表渲染区渲染 ()

引擎.渲染开始 ()
引擎.清屏 ()
.如果 (RGC对话框开关 ＝ 真 或 渲染区半透明开关 ＝ 真 或 更换按键事件 ＝ 真)
    .如果 (渲染区透明度 － 20 ≤ 50)
        渲染区透明度 ＝ 50
    .否则
        渲染区透明度 ＝ 渲染区透明度 － 20
    .如果结束

.否则
    .如果 (渲染区透明度 ＋ 20 ≥ 255)
        渲染区透明度 ＝ 255
    .否则
        渲染区透明度 ＝ 渲染区透明度 ＋ 20
    .如果结束

.如果结束

游戏渲染区精灵.置中心 (0, 0)

.如果 (渲染区透明度 ≠ 255)
    游戏渲染区精灵.置透明度 (渲染区透明度 ÷ 4)
    .计次循环首 (1, n)
        游戏渲染区精灵.显示 (0 － n × 2, 0)
        游戏渲染区精灵.显示 (n × 2, 0)
        游戏渲染区精灵.显示 (0, 0 － n × 2)
        游戏渲染区精灵.显示 (0, n × 2)
        游戏渲染区精灵.显示 (0 － n × 2, 0 － n × 2)
        游戏渲染区精灵.显示 (n × 2, 0 － n × 2)
        游戏渲染区精灵.显示 (n × 2, n × 2)
        游戏渲染区精灵.显示 (0 － n × 2, n × 2)
    .计次循环尾 ()
    游戏渲染区精灵.显示 (0, 0)
.否则
    游戏渲染区精灵.置透明度 (渲染区透明度)
    游戏渲染区精灵.显示 (0, 0)
    渲染区特效处理并渲染 ()

.如果结束





.如果真 (选歌列表开关 ＝ 真)
    选歌列表渲染区精灵.显示 (0, 80 × 分辨率缩放倍率)
    选歌列表渲染无渲染区 ()

.如果真结束

.如果 (调试信息显示 ＝ 真)
    调试信息显示 ()
.否则

.如果结束

遮盖显示 ()
Welcome渲染 ()
按钮设定对话框渲染 ()
RGC对话框渲染 ()
通知系统渲染 ()
圆角精灵显示 ()
引擎.渲染结束 ()

返回 (假)



.子程序 选歌列表渲染区渲染

引擎.渲染开始 (选歌列表渲染区)
引擎.清屏 ()
选歌列表渲染 ()
引擎.渲染结束 ()

.子程序 渲染区遗失, 逻辑型

加入控制台文本 (“RBC:Reload render region”)
灯光渲染区遗失 ()
视频渲染区遗失 ()
游戏渲染区精灵.置纹理 (引擎.取渲染区纹理 (游戏渲染区))
选歌列表渲染区精灵.置纹理 (引擎.取渲染区纹理 (选歌列表渲染区))
返回 (假)

.子程序 调试信息显示
.局部变量 系统环境, 文本型
.局部变量 显示文字, 文本型

.判断开始 (系统取版本 () ＝ 5.1)
    系统环境 ＝ “Windows XP”
.判断 (系统取版本 () ＝ 6)
    系统环境 ＝ “Windows Vista”
.判断 (系统取版本 () ＝ 6.1)
    系统环境 ＝ “Windows 7”
.判断 (系统取版本 () ＝ 6.2)
    系统环境 ＝ “Windows 8”
.默认

.判断结束

显示文字 ＝ “当前FPS：” ＋ 到文本 (引擎.取FPS ()) ＋ #换行符 ＋ “窗口分辨率：” ＋ 到文本 (引擎.取窗口宽 ()) ＋ “× ” ＋ 到文本 (引擎.取窗口高 ()) ＋ #换行符 ＋ “引擎最后帧时间：” ＋ 到文本 (引擎.取最后帧时间 ()) ＋ #换行符 ＋ “游戏已运行：” ＋ 到文本 (取整 (引擎.取运行时间 ())) ＋ “秒” ＋ #换行符 ＋ “运行环境：” ＋ 系统环境 ＋ #换行符 ＋ “鼠标坐标：X.” ＋ 到文本 (鼠标坐标.x) ＋ “ Y.” ＋ 到文本 (鼠标坐标.y)
显示文字 ＝ 显示文字 ＋ #换行符 ＋ “频谱：” ＋ 到文本 (频谱总量 ÷ 128)
显示文字 ＝ 显示文字 ＋ #换行符 ＋ “播放状态：” ＋ 到文本 (BASS_ChannelIsActive (播放句柄))
调试信息.置颜色 (#颜色_白)
调试信息.显示 (10, 10, 显示文字, 真, ARGB (150, 0, 0, 0))
设置界面调试 ()

.子程序 显示文字
.参数 文字, 文本型
.参数 X, 整数型
.参数 Y, 整数型

调试信息.显示 (X, Y, 文字)


.子程序 渲染区特效处理并渲染
.局部变量 n, 整数型

.计次循环首 (取数组成员数 (渲染区震荡特效), n)
    .如果 (n ＞ 取数组成员数 (渲染区震荡特效))

    .否则
        .如果 (渲染区震荡特效 [n].透明度 － 10 ≤ 0)
            渲染区震荡特效 [n].透明度 ＝ 0
        .否则
            渲染区震荡特效 [n].透明度 ＝ 渲染区震荡特效 [n].透明度 － 10
        .如果结束
        渲染区震荡特效 [n].缩放 ＝ 渲染区震荡特效 [n].缩放 ＋ 10
        .如果 (渲染区震荡特效 [n].透明度 ＝ 0)
            删除成员 (渲染区震荡特效, n, 1)
        .否则

        .如果结束

    .如果结束

.计次循环尾 ()

游戏渲染区精灵.置中心 (游戏渲染区精灵.取宽度 () ÷ 2, 游戏渲染区精灵.取高度 () ÷ 2)
.计次循环首 (取数组成员数 (渲染区震荡特效), n)
    游戏渲染区精灵.置透明度 (渲染区震荡特效 [n].透明度)
    游戏渲染区精灵.显示高级 (分辨率.窗口宽度 ÷ 2, 分辨率.窗口高度 ÷ 2, 0, 渲染区震荡特效 [n].缩放 ÷ 1000, 渲染区震荡特效 [n].缩放 ÷ 1000)
.计次循环尾 ()


.子程序 震荡一下
.局部变量 临时震荡, 震荡特效

.如果真 (视频开关.UIGOGO特效 ＝ 真)
    临时震荡.缩放 ＝ 1000
    .如果 (RGC对话框开关 ＝ 真)
        临时震荡.透明度 ＝ 渲染区透明度
    .否则
        临时震荡.透明度 ＝ 150
    .如果结束
    加入成员 (渲染区震荡特效, 临时震荡)
.如果真结束


.子程序 关于文本行数初始化
.局部变量 文本, 文本型, , "0"

文本 ＝ 分割文本 (#关于文字, #换行符, )
关于文字行数 ＝ 取数组成员数 (文本)

.子程序 缩放倍率计算

分辨率缩放倍率 ＝ 分辨率.窗口高度 ÷ 600

.子程序 出错逻辑, 逻辑型

返回 (假)

.子程序 出错渲染, 逻辑型

引擎.渲染开始 ()
引擎.清屏 (ARGB (255, 19, 141, 226))
出错文字2.显示 (80, 80, “:(”)
出错文字.显示 (80, 145, “      Rabbit Engine Error” ＋ #换行符 ＋ #换行符 ＋ #换行符 ＋ 缺少文件)
引擎.渲染结束 ()
返回 (假)
