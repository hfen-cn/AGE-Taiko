.版本 2
.支持库 shellEx

.程序集 界面类
.程序集变量 动画, 动画视频, , "0"
.程序集变量 动画视频精灵, Age_精灵
.程序集变量 鼠标精灵, Age_精灵
.程序集变量 遮罩, Age_精灵
.程序集变量 鼠标角度, 小数型
.程序集变量 鼠标透明度, 整数型
.程序集变量 鼠标缩放, 小数型
.程序集变量 鼠标粒子, Age_粒子
.程序集变量 鼠标粒子精灵, Age_精灵
.程序集变量 高潮粒子, Age_粒子
.程序集变量 高潮粒子左, Age_粒子
.程序集变量 遮罩透明度, 整数型
.程序集变量 遮罩切换窗口, 文本型
.程序集变量 遮罩切换执行, 子程序指针
.程序集变量 遮罩切换开关, 逻辑型
.程序集变量 遮罩切换速度, 整数型
.程序集变量 遮罩切换直接黑, 逻辑型
.程序集变量 遮罩切换是否执行, 逻辑型
.程序集变量 视频渲染区, 整数型
.程序集变量 视频渲染区精灵, Age_精灵

.子程序 动画视频, , , 读取谱面对应的背景动画，当前还不完善

视频渲染区精灵.显示 (分辨率.窗口宽度 ÷ 2 － 视频渲染区精灵.取宽度 () ÷ 2, 0)

.子程序 动画视频渲染区渲染, , , 读取谱面对应的背景动画，当前还不完善
.局部变量 X, 整数型

引擎.渲染开始 (视频渲染区)
引擎.清屏 ()
.计次循环首 (取数组成员数 (动画), X)
    动画视频精灵.翻转 (动画 [X].X轴翻转, 动画 [X].Y轴翻转, 动画 [X].翻转锚点)
    动画视频精灵.置纹理 (动画 [X].图片.纹理)
    动画视频精灵.置渲染区域 (0, 0, 引擎.取图片宽 (动画 [X].图片.纹理), 引擎.取图片高 (动画 [X].图片.纹理))
    动画视频精灵.置透明度 (动画 [X].图片透明度)
    动画视频精灵.置中心 (动画 [X].图片中心X, 动画 [X].图片中心Y)
    ' 优化处理
    .判断开始 (动画 [X].图片透明度 ＝ 0)

    .判断 (动画 [X].目标缩放X ＝ 0)

    .判断 (动画 [X].目标缩放Y ＝ 0)

    .默认
        动画视频精灵.显示高级 (动画 [X].图片目标坐标X, 动画 [X].图片目标坐标Y, 动画 [X].旋转差值 ÷ 1000, 动画 [X].目标缩放X ÷ 1000, 动画 [X].目标缩放Y ÷ 1000)
    .判断结束

.计次循环尾 ()

引擎.渲染结束 ()

.子程序 遮盖显示
.局部变量 a, 整数型, 静态

.如果 (遮罩切换开关 ＝ 真)
    .如果 (a ＝ 0)
        .如果 (遮罩切换直接黑 ＝ 真)
            a ＝ 1
            遮罩透明度 ＝ 255
            遮罩.置透明度 (遮罩透明度)
            当前窗口 ＝ 遮罩切换窗口
        .否则
            .如果 (遮罩透明度 ＋ 帧率数据处理 (遮罩切换速度) ≥ 255)
                遮罩透明度 ＝ 255
                遮罩.置透明度 (遮罩透明度)
                a ＝ 1
                当前窗口 ＝ 遮罩切换窗口
                .如果 (遮罩切换是否执行 ＝ 真)
                    执行子程序 (遮罩切换执行, )
                .否则

                .如果结束

            .否则
                遮罩透明度 ＝ 遮罩透明度 ＋ 帧率数据处理 (遮罩切换速度)
            .如果结束

        .如果结束

    .否则
        .如果 (遮罩透明度 － 帧率数据处理 (遮罩切换速度) ≤ 0)
            遮罩透明度 ＝ 0
            遮罩.置透明度 (遮罩透明度)
            a ＝ 0
            遮罩切换开关 ＝ 假
        .否则
            遮罩透明度 ＝ 遮罩透明度 － 帧率数据处理 (遮罩切换速度)
        .如果结束

    .如果结束
    遮罩.置透明度 (遮罩透明度)
    .如果 (遮罩透明度 ＝ 0)

    .否则
        遮罩.显示高级 (0, 0, 0, 分辨率.遮罩缩放X, 分辨率.遮罩缩放Y)
    .如果结束

.否则
.如果结束


.子程序 遮罩切换
.参数 切换窗口, 文本型
.参数 速度, 整数型
.参数 执行指针, 子程序指针, 可空
.参数 直接黑屏, 逻辑型, 可空

遮罩切换窗口 ＝ 切换窗口
遮罩切换开关 ＝ 真
遮罩切换执行 ＝ 执行指针
遮罩切换是否执行 ＝ 真
遮罩切换速度 ＝ 速度
遮罩切换直接黑 ＝ 直接黑屏

.子程序 遮罩切换_无执行
.参数 切换窗口, 文本型
.参数 速度, 整数型
.参数 直接黑屏, 逻辑型, 可空

遮罩切换窗口 ＝ 切换窗口
遮罩切换开关 ＝ 真
遮罩切换速度 ＝ 速度
遮罩切换是否执行 ＝ 假
遮罩切换直接黑 ＝ 直接黑屏

.子程序 动画逻辑, , , 谱面对应的背景动画，当前还不完善
.局部变量 时间, 整数型
.局部变量 读取数据, 文本型
.局部变量 分割参数, 文本型, , "0"
.局部变量 X, 整数型
.局部变量 坐标加速度, 小数型
.局部变量 坐标速度, 小数型
.局部变量 坐标差值2, 小数型
.局部变量 坐标加速度2, 小数型
.局部变量 坐标速度2, 小数型
.局部变量 多行代码, 文本型, , "0"
.局部变量 y, 整数型
.局部变量 临时动画, 动画视频
.局部变量 分割, 文本型, , "0"
.局部变量 i, 整数型
.局部变量 是否存在资源, 逻辑型
.局部变量 临时资源, 动画视频资源
.局部变量 是否存在动画, 逻辑型
.局部变量 当前毫秒, 整数型
.局部变量 引擎差值, 小数型

.如果 (BASS_ChannelIsActive (音效 [3].句柄) ＝ 0 或 BASS_ChannelIsActive (音效 [3].句柄) ＝ 3)

.否则
    时间 ＝ BASS_ChannelBytes2Seconds (音效 [3].句柄, BASS_ChannelGetPosition (音效 [3].句柄, 0)) × 10
    读取数据 ＝ 读配置项 (取运行目录 () ＋ “\Songs\” ＋ 音乐文件夹 ＋ “\” ＋ 音乐文件夹 ＋ “.tsb”, “Vedio”, 到文本 (时间), )
    多行代码 ＝ 分割文本 (读取数据, “|”, )
    .如果 (读取数据 ＝ “”)

    .否则
        .计次循环首 (取数组成员数 (多行代码), y)
            分割参数 ＝ 分割文本 (多行代码 [y], “,”, )
            重定义数组 (分割参数, 真, 20)
            .如果 (到大写 (分割参数 [1]) ＝ “ADD”)
                .计次循环首 (取数组成员数 (动画), i)
                    .如果 (动画 [i].图片名称 ＝ 分割参数 [3])
                        是否存在动画 ＝ 真
                        跳出循环 ()
                    .否则

                    .如果结束

                .计次循环尾 ()
                .计次循环首 (取数组成员数 (动画资源), i)
                    .如果 (动画资源 [i].图片名称 ＝ 分割参数 [2])
                        临时动画.图片 ＝ 动画资源 [i].图片
                        跳出循环 ()
                    .否则

                    .如果结束

                .计次循环尾 ()
                .如果 (是否存在动画 ＝ 真)

                .否则
                    临时动画.图片名称 ＝ 分割参数 [3]
                    临时动画.图片目标坐标X ＝ 到整数 (分割参数 [4])
                    临时动画.图片目标坐标Y ＝ 到整数 (分割参数 [5])
                    临时动画.图片坐标X ＝ 到整数 (分割参数 [4])
                    临时动画.图片坐标Y ＝ 到整数 (分割参数 [5])
                    临时动画.图片横向缩放比 ＝ 到整数 (分割参数 [6])
                    临时动画.图片纵向缩放比 ＝ 到整数 (分割参数 [7])
                    临时动画.目标缩放X ＝ 到整数 (分割参数 [6])
                    临时动画.目标缩放Y ＝ 到整数 (分割参数 [7])
                    临时动画.图片旋转角度 ＝ 到小数 (分割参数 [8])
                    临时动画.起始角度 ＝ 到小数 (分割参数 [8])
                    临时动画.旋转差值 ＝ 临时动画.起始角度
                    临时动画.图片最终透明度 ＝ 到整数 (分割参数 [9])
                    临时动画.图片透明度 ＝ 到整数 (分割参数 [9])
                    临时动画.图片中心X ＝ 到整数 (分割参数 [10])
                    临时动画.图片中心Y ＝ 到整数 (分割参数 [11])
                    加入成员 (动画, 临时动画)
                .如果结束

            .否则
            .如果结束
            .如果 (到大写 (分割参数 [1]) ＝ “DEL”)
                .计次循环首 (取数组成员数 (动画), i)
                    .如果 (动画 [i].图片名称 ＝ 分割参数 [2])
                        删除成员 (动画, i, 1)
                        跳出循环 ()
                    .否则

                    .如果结束

                .计次循环尾 ()
            .否则

            .如果结束
            .计次循环首 (取数组成员数 (动画), X)
                .如果 (到大写 (分割参数 [1]) ＝ “M”)
                    .如果 (动画 [X].图片名称 ＝ 分割参数 [2])
                        .如果 (到整数 (分割参数 [7]) ＝ 1)

                        .否则
                            动画 [X].图片目标坐标X ＝ 到整数 (分割参数 [3])
                            动画 [X].图片目标坐标Y ＝ 到整数 (分割参数 [4])
                        .如果结束
                        动画 [X].图片坐标X ＝ 到整数 (分割参数 [5])
                        动画 [X].图片坐标Y ＝ 到整数 (分割参数 [6])
                        .如果 (动画 [X].图片坐标X ＜ 动画 [X].图片目标坐标X)
                            动画 [X].X速度 ＝ (动画 [X].图片目标坐标X － 动画 [X].图片坐标X ＋ 50) ÷ (到小数 (分割参数 [8]) × 10)
                        .否则
                            动画 [X].X速度 ＝ (动画 [X].图片坐标X － 动画 [X].图片目标坐标X ＋ 50) ÷ (到小数 (分割参数 [8]) × 10)
                        .如果结束
                        .如果 (动画 [X].图片坐标Y ＜ 动画 [X].图片目标坐标Y)
                            动画 [X].Y速度 ＝ (动画 [X].图片目标坐标Y － 动画 [X].图片坐标Y ＋ 50) ÷ (到小数 (分割参数 [9]) × 10)
                        .否则
                            动画 [X].Y速度 ＝ (动画 [X].图片坐标Y － 动画 [X].图片目标坐标Y ＋ 50) ÷ (到小数 (分割参数 [9]) × 10)
                        .如果结束

                    .否则

                    .如果结束

                .否则
                .如果结束
                .如果 (到大写 (分割参数 [1]) ＝ “Z”)
                    .如果 (动画 [X].图片名称 ＝ 分割参数 [2])
                        动画 [X].起始缩放X ＝ 到整数 (分割参数 [3])
                        动画 [X].起始缩放y ＝ 到整数 (分割参数 [4])
                        动画 [X].图片横向缩放比 ＝ 到小数 (分割参数 [5])
                        动画 [X].图片纵向缩放比 ＝ 到小数 (分割参数 [6])
                        .如果 (到整数 (分割参数 [7]) ＝ 1)

                        .否则
                            动画 [X].目标缩放X ＝ 动画 [X].起始缩放X
                            动画 [X].目标缩放Y ＝ 动画 [X].起始缩放y
                        .如果结束
                        .如果 (动画 [X].目标缩放X ＜ 动画 [X].图片横向缩放比)
                            动画 [X].缩放速度X ＝ (动画 [X].图片横向缩放比 － 动画 [X].目标缩放X ＋ 508) ÷ (到小数 (分割参数 [8]) × 10)
                        .否则
                            动画 [X].缩放速度X ＝ (动画 [X].目标缩放X － 动画 [X].图片横向缩放比 ＋ 508) ÷ (到小数 (分割参数 [8]) × 10)
                        .如果结束
                        .如果 (动画 [X].目标缩放Y ＜ 动画 [X].图片纵向缩放比)
                            动画 [X].缩放速度Y ＝ (动画 [X].图片纵向缩放比 － 动画 [X].目标缩放Y ＋ 508) ÷ (到小数 (分割参数 [9]) × 10)
                        .否则
                            动画 [X].缩放速度Y ＝ (动画 [X].目标缩放Y － 动画 [X].图片纵向缩放比 ＋ 508) ÷ (到小数 (分割参数 [9]) × 10)
                        .如果结束

                    .否则

                    .如果结束

                .否则
                .如果结束
                .如果 (到大写 (分割参数 [1]) ＝ “R”)
                    .如果 (动画 [X].图片名称 ＝ 分割参数 [2])
                        动画 [X].图片旋转角度 ＝ 到小数 (分割参数 [4])
                        动画 [X].起始角度 ＝ 到小数 (分割参数 [3])
                        动画 [X].旋转差值 ＝ 动画 [X].起始角度
                        .如果 (动画 [X].旋转差值 ＜ 动画 [X].图片旋转角度)
                            动画 [X].旋转速度 ＝ (动画 [X].图片旋转角度 － 动画 [X].旋转差值 ＋ 2819) ÷ (到小数 (分割参数 [5]) × 10)
                        .否则

                        .如果结束

                    .否则
                    .如果结束

                .否则
                .如果结束
                .如果 (到大写 (分割参数 [1]) ＝ “T”)
                    .如果 (动画 [X].图片名称 ＝ 分割参数 [2])
                        动画 [X].图片最终透明度 ＝ 到整数 (分割参数 [3])
                        动画 [X].图片透明度减少量 ＝ 到整数 (分割参数 [4])
                    .否则

                    .如果结束

                .否则
                .如果结束
                .如果 (到大写 (分割参数 [1]) ＝ “F”)
                    .如果 (动画 [X].图片名称 ＝ 分割参数 [2])
                        .如果 (分割参数 [3] ＝ “1”)
                            动画 [X].X轴翻转 ＝ 真
                        .否则
                            动画 [X].X轴翻转 ＝ 假
                        .如果结束
                        .如果 (分割参数 [4] ＝ “1”)
                            动画 [X].Y轴翻转 ＝ 真
                        .否则
                            动画 [X].Y轴翻转 ＝ 假
                        .如果结束
                        .如果 (分割参数 [5] ＝ “1”)
                            动画 [X].翻转锚点 ＝ 真
                        .否则
                            动画 [X].翻转锚点 ＝ 假
                        .如果结束

                    .否则
                    .如果结束

                .否则
                .如果结束
                .如果 (到大写 (分割参数 [1]) ＝ “C”)
                    .如果 (动画 [X].图片名称 ＝ 分割参数 [2])
                        动画 [X].图片中心X ＝ 到整数 (分割参数 [3])
                        动画 [X].图片中心Y ＝ 到整数 (分割参数 [4])
                    .否则

                    .如果结束

                .否则
                .如果结束
                .如果 (到大写 (分割参数 [1]) ＝ “L”)
                    .如果 (动画 [X].图片名称 ＝ 分割参数 [2])
                        .如果 (到整数 (分割参数 [3]) ＝ 0)

                        .否则
                            .如果 (取数组成员数 (动画) ≥ 到整数 (分割参数 [3]))
                                .如果 (到整数 (分割参数 [3]) ≤ 0)
                                    临时动画 ＝ 动画 [X]
                                    删除成员 (动画, X, 1)
                                    插入成员 (动画, 1, 临时动画)
                                .否则
                                    临时动画 ＝ 动画 [X]
                                    删除成员 (动画, X, 1)
                                    插入成员 (动画, 到整数 (分割 [2]), 临时动画)
                                .如果结束

                            .否则
                                临时动画 ＝ 动画 [X]
                                删除成员 (动画, X, 1)
                                插入成员 (动画, 取数组成员数 (动画) ＋ 1, 临时动画)

                            .如果结束

                        .如果结束

                    .否则
                    .如果结束

                .否则

                .如果结束
                .如果 (到大写 (分割参数 [1]) ＝ “H”)
                    .如果 (动画 [X].图片名称 ＝ 分割参数 [2])
                        .计次循环首 (取数组成员数 (动画资源), i)
                            .如果 (动画资源 [i].图片名称 ＝ 分割参数 [3])
                                是否存在资源 ＝ 真
                                跳出循环 ()
                            .否则

                            .如果结束

                        .计次循环尾 ()
                        .如果 (是否存在资源 ＝ 假)
                            临时资源.图片.纹理 ＝ 引擎.读纹理 (动画地址 ＋ 分割参数 [3])
                            临时资源.图片名称 ＝ 分割参数 [3]
                            加入成员 (动画资源, 临时资源)
                            动画 [X].图片 ＝ 临时资源.图片
                        .否则
                            动画 [X].图片 ＝ 动画资源 [i].图片
                        .如果结束

                    .否则
                    .如果结束

                .否则
                .如果结束

            .计次循环尾 ()
        .计次循环尾 ()

    .如果结束
    .计次循环首 (取数组成员数 (动画), X)
        .如果 (动画 [X].移动模式 ＝ 1)
            坐标差值2 ＝ 动画 [X].图片目标坐标X － 动画 [X].图片坐标X
            坐标加速度2 ＝ 坐标差值2 × 动画 [X].X速度
            坐标速度2 ＝ 坐标速度2 ＋ 坐标加速度2
            坐标速度2 ＝ 四舍五入 (坐标速度2 × 动画 [X].X加速度, )
            动画 [X].图片目标坐标X ＝ 动画 [X].图片目标坐标X － 帧率数据处理 (坐标速度2)
            坐标差值2 ＝ 动画 [X].图片目标坐标Y － 动画 [X].图片坐标Y
            坐标加速度2 ＝ 坐标差值2 × 动画 [X].X速度
            坐标速度2 ＝ 坐标速度2 ＋ 坐标加速度2
            坐标速度2 ＝ 四舍五入 (坐标速度2 × 动画 [X].X加速度, )
            动画 [X].图片目标坐标Y ＝ 动画 [X].图片目标坐标Y － 帧率数据处理 (坐标速度2)
        .否则

        .如果结束
        .如果 (动画 [X].移动模式 ＝ 0)
            .如果 (动画 [X].图片坐标X － 动画 [X].图片目标坐标X ≤ 0)
                .如果 (动画 [X].图片目标坐标X － 帧率数据处理 (动画 [X].X速度) ≤ 动画 [X].图片坐标X)
                    动画 [X].图片目标坐标X ＝ 动画 [X].图片坐标X
                .否则
                    动画 [X].图片目标坐标X ＝ 动画 [X].图片目标坐标X － 帧率数据处理 (动画 [X].X速度)
                .如果结束

            .否则
                引擎差值 ＝ 动画 [X].X速度 ÷ 0.017
                .如果 (动画 [X].图片目标坐标X ＋ 帧率数据处理 (动画 [X].X速度) ≥ 动画 [X].图片坐标X)
                    动画 [X].图片目标坐标X ＝ 动画 [X].图片坐标X
                .否则
                    动画 [X].图片目标坐标X ＝ 动画 [X].图片目标坐标X ＋ 帧率数据处理 (动画 [X].X速度)
                .如果结束

            .如果结束
            .如果 (动画 [X].图片坐标Y － 动画 [X].图片目标坐标Y ≤ 0)
                .如果 (动画 [X].图片目标坐标Y － 帧率数据处理 (动画 [X].Y速度) ≤ 动画 [X].图片坐标Y)
                    动画 [X].图片目标坐标Y ＝ 动画 [X].图片坐标Y
                .否则
                    动画 [X].图片目标坐标Y ＝ 动画 [X].图片目标坐标Y － 帧率数据处理 (动画 [X].Y速度)
                .如果结束

            .否则
                引擎差值 ＝ 动画 [X].Y速度 ÷ 0.017
                .如果 (动画 [X].图片目标坐标Y ＋ 帧率数据处理 (动画 [X].Y速度) ≥ 动画 [X].图片坐标Y)
                    动画 [X].图片目标坐标Y ＝ 动画 [X].图片坐标Y
                .否则
                    动画 [X].图片目标坐标Y ＝ 动画 [X].图片目标坐标Y ＋ 帧率数据处理 (动画 [X].Y速度)
                .如果结束

            .如果结束

        .否则
        .如果结束

        .如果 (动画 [X].缩放模式 ＝ 1)
            坐标差值2 ＝ 动画 [X].图片横向缩放比 － 动画 [X].目标缩放X
            坐标加速度2 ＝ 坐标差值2 × 动画 [X].缩放速度X
            坐标速度2 ＝ 坐标速度2 ＋ 坐标加速度2
            坐标速度2 ＝ 四舍五入 (坐标速度2 × 动画 [X].缩放速度Y, )
            动画 [X].目标缩放X ＝ 动画 [X].目标缩放X ＋ 帧率数据处理 (坐标速度2)
            坐标差值2 ＝ 动画 [X].图片纵向缩放比 － 动画 [X].目标缩放Y
            坐标加速度2 ＝ 坐标差值2 × 动画 [X].缩放速度X
            坐标速度2 ＝ 坐标速度2 ＋ 坐标加速度2
            坐标速度2 ＝ 四舍五入 (坐标速度2 × 动画 [X].缩放速度Y, )
            动画 [X].目标缩放Y ＝ 动画 [X].目标缩放Y ＋ 帧率数据处理 (坐标速度2)
        .否则

        .如果结束
        .如果 (动画 [X].缩放模式 ＝ 0)
            .如果 (动画 [X].图片纵向缩放比 － 动画 [X].目标缩放Y ≤ 0)
                .如果 (动画 [X].目标缩放Y － 帧率数据处理 (动画 [X].缩放速度Y) ≤ 动画 [X].图片纵向缩放比)
                    动画 [X].目标缩放Y ＝ 动画 [X].图片纵向缩放比
                .否则
                    动画 [X].目标缩放Y ＝ 动画 [X].目标缩放Y － 帧率数据处理 (动画 [X].缩放速度Y)
                .如果结束

            .否则
                .如果 (动画 [X].目标缩放Y ＋ 帧率数据处理 (动画 [X].缩放速度Y) ≥ 动画 [X].图片纵向缩放比)
                    动画 [X].目标缩放Y ＝ 动画 [X].图片纵向缩放比
                .否则
                    动画 [X].目标缩放Y ＝ 动画 [X].目标缩放Y ＋ 帧率数据处理 (动画 [X].缩放速度Y)
                .如果结束

            .如果结束
            .如果 (动画 [X].图片横向缩放比 － 动画 [X].目标缩放X ≤ 0)
                .如果 (动画 [X].目标缩放X － 帧率数据处理 (动画 [X].缩放速度X) ≤ 动画 [X].图片横向缩放比)
                    动画 [X].目标缩放X ＝ 动画 [X].图片横向缩放比
                .否则
                    动画 [X].目标缩放X ＝ 动画 [X].目标缩放X － 帧率数据处理 (动画 [X].缩放速度X)
                .如果结束

            .否则
                .如果 (动画 [X].目标缩放X ＋ 帧率数据处理 (动画 [X].缩放速度X) ≥ 动画 [X].图片横向缩放比)
                    动画 [X].目标缩放X ＝ 动画 [X].图片横向缩放比
                .否则
                    动画 [X].目标缩放X ＝ 动画 [X].目标缩放X ＋ 帧率数据处理 (动画 [X].缩放速度X)
                .如果结束

            .如果结束

        .否则

        .如果结束
        .如果 (动画 [X].图片旋转角度 － 动画 [X].旋转差值 ＞ 0)
            .如果 (动画 [X].旋转差值 ＋ 帧率数据处理 (动画 [X].旋转速度) ≥ 动画 [X].图片旋转角度)
                动画 [X].旋转差值 ＝ 动画 [X].图片旋转角度
            .否则
                动画 [X].旋转差值 ＝ 动画 [X].旋转差值 ＋ 帧率数据处理 (动画 [X].旋转速度)
            .如果结束

        .否则
            .如果 (动画 [X].旋转差值 － 帧率数据处理 (动画 [X].旋转速度) ≤ 动画 [X].图片旋转角度)
                动画 [X].旋转差值 ＝ 动画 [X].图片旋转角度
            .否则
                动画 [X].旋转差值 ＝ 动画 [X].旋转差值 － 帧率数据处理 (动画 [X].旋转速度)
            .如果结束

        .如果结束
        .如果 (动画 [X].图片最终透明度 － 动画 [X].图片透明度 ＞ 0)
            引擎差值 ＝ 动画 [X].图片透明度减少量 ÷ 0.017
            .如果 (动画 [X].图片透明度 ＋ 帧率数据处理 (动画 [X].图片透明度减少量) ≥ 动画 [X].图片最终透明度)
                动画 [X].图片透明度 ＝ 动画 [X].图片最终透明度
            .否则
                动画 [X].图片透明度 ＝ 动画 [X].图片透明度 ＋ 帧率数据处理 (动画 [X].图片透明度减少量)
            .如果结束

        .否则
            引擎差值 ＝ 动画 [X].图片透明度减少量 ÷ 0.017
            .如果 (动画 [X].图片透明度 － 帧率数据处理 (动画 [X].图片透明度减少量) ≤ 动画 [X].图片最终透明度)
                动画 [X].图片透明度 ＝ 动画 [X].图片最终透明度
            .否则
                动画 [X].图片透明度 ＝ 动画 [X].图片透明度 － 帧率数据处理 (动画 [X].图片透明度减少量)
            .如果结束

        .如果结束

    .计次循环尾 ()
.如果结束


.子程序 视频资源初始化, , , 备用
.局部变量 临时资源, 动画视频资源
.局部变量 临时文件夹, 文本型
.局部变量 临时文件, 文本型

临时文件夹 ＝ 动画地址
临时文件 ＝ 寻找文件 (临时文件夹 ＋ “\*.png”, )
.判断循环首 (临时文件 ≠ “”)
    临时资源.图片.纹理 ＝ 引擎.读纹理 (临时文件夹 ＋ “\” ＋ 临时文件)
    临时资源.图片名称 ＝ 临时文件
    加入成员 (动画资源, 临时资源)
    临时文件 ＝ 寻找文件 (, )
.判断循环尾 ()
临时文件夹 ＝ 动画地址
临时文件 ＝ 寻找文件 (临时文件夹 ＋ “\*.jpg”, )
.判断循环首 (临时文件 ≠ “”)
    临时资源.图片.纹理 ＝ 引擎.读纹理 (临时文件夹 ＋ “\” ＋ 临时文件)
    临时资源.图片名称 ＝ 临时文件
    加入成员 (动画资源, 临时资源)
    临时文件 ＝ 寻找文件 (, )
.判断循环尾 ()
临时文件夹 ＝ 动画地址
临时文件 ＝ 寻找文件 (临时文件夹 ＋ “\*.bmp”, )
.判断循环首 (临时文件 ≠ “”)
    临时资源.图片.纹理 ＝ 引擎.读纹理 (临时文件夹 ＋ “\” ＋ 临时文件)
    临时资源.图片名称 ＝ 临时文件
    加入成员 (动画资源, 临时资源)
    临时文件 ＝ 寻找文件 (, )
.判断循环尾 ()
' 调试输出 (取数组成员数 (动画资源))

.子程序 音乐动画初始化
.局部变量 i, 整数型

.计次循环首 (取数组成员数 (动画资源), i)
    引擎.销毁图片 (动画资源 [i].图片.纹理)
.计次循环尾 ()
重定义数组 (动画资源, 假, 0)
重定义数组 (动画, 假, 0)

.子程序 界面类初始化

动画视频精灵.创建 (引擎.创建空纹理 (1, 1), , , , , )
鼠标精灵.创建 (引擎.读纹理 (“鼠标.png”), , , )
鼠标粒子精灵.创建 (引擎.读纹理 (“粒子星星.png”), , )
遮罩.创建 (引擎.读纹理_字节集 (#遮罩), , , )
鼠标粒子.创建 (取运行目录 () ＋ “\psi\mouse.psi”, 鼠标粒子精灵)
高潮粒子.创建 (取运行目录 () ＋ “\psi\gogostart.psi”, 鼠标粒子精灵)
高潮粒子左.创建 (取运行目录 () ＋ “\psi\gogostarts.psi”, 鼠标粒子精灵)
鼠标粒子精灵.置中心 (鼠标粒子精灵.取宽度 () ÷ 2, 鼠标粒子精灵.取高度 () ÷ 2)
鼠标精灵.置中心 (鼠标精灵.取宽度 () ÷ 2, 鼠标精灵.取高度 () ÷ 2)
动画视频精灵.置混合模式 (#混合_默认)
鼠标精灵.置混合模式 (#混合_默认)
鼠标粒子精灵.置混合模式 (#混合_Add2X)
遮罩.置混合模式 (#混合_默认)
视频渲染区 ＝ 引擎.创建渲染区 (800, 600, 假)
视频渲染区精灵.创建 (引擎.取渲染区纹理 (视频渲染区), 0, 0, 800, 600)

.子程序 视频渲染区遗失

视频渲染区精灵.置纹理 (引擎.取渲染区纹理 (视频渲染区))

.子程序 鼠标显示
.局部变量 计时, 小数型, 静态
.局部变量 X, 小数型, 静态
.局部变量 Y, 小数型, 静态

.如果 (鼠标角度 ≥ 360)
    鼠标角度 ＝ 0
.否则
    鼠标角度 ＝ 鼠标角度 ＋ 帧率数据处理 (0.01)
.如果结束
.如果 (当前窗口 ＝ “太鼓游戏”)
    .如果 (暂停菜单 ＝ 真)
        计时 ＝ 0
    .否则
        .如果 (鼠标坐标.x ＝ X)

        .否则
            X ＝ 鼠标坐标.x
            计时 ＝ 0
        .如果结束
        .如果 (Y ＝ 鼠标坐标.y)

        .否则
            Y ＝ 鼠标坐标.y
            计时 ＝ 0
        .如果结束
        计时 ＝ 计时 ＋ 帧率数据处理 (0.1)
        .如果 (计时 ≥ 50)
            计时 ＝ 50
        .否则

        .如果结束

    .如果结束
    .如果 (计时 ＝ 50)
        .如果 (鼠标透明度 － 帧率数据处理 (20) ≤ 0)
            鼠标透明度 ＝ 0
        .否则
            鼠标透明度 ＝ 鼠标透明度 － 帧率数据处理 (20)
        .如果结束
        鼠标粒子.停止 (假)
    .否则
        .如果 (鼠标透明度 ＋ 帧率数据处理 (20) ≥ 255)
            鼠标透明度 ＝ 255
        .否则
            鼠标透明度 ＝ 鼠标透明度 ＋ 帧率数据处理 (20)
        .如果结束
        鼠标粒子.启动到 (鼠标坐标.x, 鼠标坐标.y)
    .如果结束

.否则
    鼠标透明度 ＝ 255
    鼠标粒子.停止 (假)
.如果结束
.如果 (引擎.键_取选中 (#鼠标左键) ＝ 真 或 引擎.键_取选中 (#鼠标右键) ＝ 真)
    .如果 (鼠标缩放 ＋ 帧率数据处理 (0.04) ≥ 1.1)
        鼠标缩放 ＝ 1.1
    .否则
        鼠标缩放 ＝ 鼠标缩放 ＋ 帧率数据处理 (0.04)
    .如果结束
    计时 ＝ 0
    鼠标粒子.置发射弧度 (100)
.否则
    .如果 (鼠标缩放 － 帧率数据处理 (0.04) ≤ 0.9)
        鼠标缩放 ＝ 0.9
    .否则
        鼠标缩放 ＝ 鼠标缩放 － 帧率数据处理 (0.04)
    .如果结束
    鼠标粒子.置发射弧度 (0)
.如果结束
鼠标精灵.置透明度 (鼠标透明度)
鼠标粒子.显示 ()
鼠标精灵.显示高级 (鼠标坐标.x, 鼠标坐标.y, 鼠标角度, 鼠标缩放, 鼠标缩放)

.子程序 鼠标取坐标

引擎.取鼠标位置 (鼠标坐标)
鼠标粒子.更新 (引擎.取最后帧时间 ())

.子程序 启动粒子

高潮粒子.启动到 (分辨率.窗口宽度 － 100, 610)
高潮粒子左.启动到 (100, 610)

.子程序 高潮粒子逻辑
.局部变量 是否打开, 逻辑型, 静态
.局部变量 粒子显示方法, 整数型, 静态
.局部变量 粒子发射方向右, 小数型, 静态
.局部变量 粒子发射方向左, 小数型, 静态
.局部变量 a

高潮粒子.更新 (引擎.取最后帧时间 ())
高潮粒子左.更新 (引擎.取最后帧时间 ())
.如果 (粒子显示方法 ＝ 1)
    .如果 (粒子发射方向左 － 帧率数据处理 (0.03) ≤ -1.8)
        粒子发射方向左 ＝ -1.8
    .否则
        粒子发射方向左 ＝ 粒子发射方向左 － 帧率数据处理 (0.03)
    .如果结束
    .如果 (粒子发射方向右 ＋ 帧率数据处理 (0.03) ≥ 1.8)
        粒子发射方向右 ＝ 1.8
    .否则
        粒子发射方向右 ＝ 粒子发射方向右 ＋ 帧率数据处理 (0.03)
    .如果结束
    高潮粒子.置发射方向 (粒子发射方向右)
    高潮粒子左.置发射方向 (粒子发射方向左)
.否则

.如果结束
.如果 (音乐高潮 ＝ 真 且 是否打开 ＝ 假)
    粒子显示方法 ＝ 取随机数 (1, 2)
    .如果 (粒子显示方法 ＝ 1)
        粒子发射方向右 ＝ -1.4
        粒子发射方向左 ＝ 1.4
    .否则
        高潮粒子.置发射方向 (-1)
        高潮粒子左.置发射方向 (1)
    .如果结束
    启动粒子 ()
    是否打开 ＝ 真
.否则

.如果结束
.如果 (音乐高潮 ＝ 假 且 是否打开 ＝ 真)
    是否打开 ＝ 假
.否则

.如果结束


.子程序 高潮粒子显示

高潮粒子.显示 ()
高潮粒子左.显示 ()

.子程序 高潮粒子关闭

高潮粒子.停止 (真)
高潮粒子左.停止 (真)
