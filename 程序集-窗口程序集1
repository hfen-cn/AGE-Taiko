.版本 2
.支持库 iext
.支持库 spec

.程序集 窗口程序集1
.程序集变量 首次播放, 整数型
.程序集变量 播放音乐, 整数型
.程序集变量 音乐总数, 整数型
.程序集变量 文件名, 文本型
.程序集变量 歌词, 文本型, , "0"
.程序集变量 时间分层, 整数型, , "0"
.程序集变量 插入新音乐, 整数型
.程序集变量 分钟, 整数型
.程序集变量 秒钟, 整数型
.程序集变量 歌词是否存在, 逻辑型
.程序集变量 歌曲文件名, 文本型
.程序集变量 时间毫秒, 文本型
.程序集变量 高潮判定, 音乐高潮, , "0"

.子程序 _窗口1_创建完毕

BASS_Init (-1, 44100, 4, 取窗口句柄 (), 0)
置随机数种子 ()
音乐初始化 ()

.子程序 播放MP3音乐
.参数 设定, 整数型, 可空
.局部变量 MP3名称2, 文本型
.局部变量 名称, 文本型
.局部变量 歌手名称, 文本型
.局部变量 歌曲最大长度, 整数型
.局部变量 歌词文本, 字节集
.局部变量 临时文件夹, 文本型
.局部变量 临时文件, 文本型
.局部变量 x, 整数型
.局部变量 i, 整数型
.局部变量 配置文件, 文本型
.局部变量 分割文本, 文本型, , "0"
.局部变量 高潮分组, 文本型, , "0"
.局部变量 n, 整数型
.局部变量 完成文本, 文本型
.局部变量 普面起始位置, 整数型
.局部变量 普面终止位置, 整数型
.局部变量 共计行数, 整数型
.局部变量 普面信息, 文本型
.局部变量 临时高潮, 音乐高潮
.局部变量 高潮序列, 整数型
.局部变量 MP3OFFSET, 小数型

.如果 (设定 ＝ 2)

.否则

.如果结束
.如果 (设定 ＝ 1)
    播放音乐 ＝ 取随机数 (0, 音乐总数 － 1)
    mp3配置文件 ＝ 取运行目录 () ＋ “\Songs\” ＋ 超级列表框3.取标题 (播放音乐, 1) ＋ “\”
.否则

.如果结束
.如果 (设定 ＝ 0)

    .如果 (播放音乐 ＝ 音乐总数 － 1)
        播放音乐 ＝ 0
        mp3配置文件 ＝ 取运行目录 () ＋ “\Songs\” ＋ 超级列表框3.取标题 (播放音乐, 1) ＋ “\”
    .否则
        播放音乐 ＝ 播放音乐 ＋ 1
        mp3配置文件 ＝ 取运行目录 () ＋ “\Songs\” ＋ 超级列表框3.取标题 (播放音乐, 1) ＋ “\”
    .如果结束

.否则

.如果结束
.如果 (设定 ＝ 4)
    .如果 (播放音乐 ＝ 0)
        播放音乐 ＝ 音乐总数 － 1
        mp3配置文件 ＝ 取运行目录 () ＋ “\Songs\” ＋ 超级列表框3.取标题 (播放音乐, 1) ＋ “\”
    .否则
        播放音乐 ＝ 播放音乐 － 1
        mp3配置文件 ＝ 取运行目录 () ＋ “\Songs\” ＋ 超级列表框3.取标题 (播放音乐, 1) ＋ “\”
    .如果结束

.否则

.如果结束
.如果 (设定 ＝ 3)
    播放音乐 ＝ 插入新音乐
    mp3配置文件 ＝ 取运行目录 () ＋ “\Songs\” ＋ 超级列表框3.取标题 (播放音乐, 1) ＋ “\”
    .如果 (mp3配置文件 ≠ “”)
        音乐总数 ＝ 音乐总数 ＋ 1
    .否则

    .如果结束

.否则

.如果结束
配置文件 ＝ 到文本 (读入文件 (mp3配置文件 ＋ 超级列表框3.取标题 (播放音乐, 1) ＋ “.tja”))
音乐文件夹 ＝ 超级列表框3.取标题 (播放音乐, 1)
分割文本 ＝ 分割文本 (配置文件, #换行符, )
超级列表框3.现行选中项 ＝ 播放音乐
名称 ＝ “未知”
.计次循环首 (取数组成员数 (分割文本), n)

    .如果 (寻找文本 (分割文本 [n], “TITLE:”, , 假) ＝ -1)

    .否则
        完成文本 ＝ 子文本替换 (分割文本 [n], “TITLE:”, , , , 真)
        MP3名称 ＝ 完成文本
        删除成员 (分割文本, n, )
        跳出循环 ()
    .如果结束

.计次循环尾 ()
MP3的BPM ＝ 100
.计次循环首 (取数组成员数 (分割文本), n)
    .如果 (寻找文本 (分割文本 [n], “BPM:”, , 假) ＝ -1)

    .否则
        完成文本 ＝ 子文本替换 (分割文本 [n], “BPM:”, , , , 真)
        .如果 (到小数 (完成文本) ＝ 0)
            MP3的BPM ＝ 100
        .否则
            MP3的BPM ＝ 到小数 (完成文本)
        .如果结束
        删除成员 (分割文本, n, )
        跳出循环 ()
    .如果结束

.计次循环尾 ()
.计次循环首 (取数组成员数 (分割文本), n)
    .如果 (寻找文本 (分割文本 [n], “SUBTITLE:”, , 假) ＝ -1)

    .否则
        完成文本 ＝ 子文本替换 (分割文本 [n], “SUBTITLE:”, , , , 真)
        歌手名称 ＝ 完成文本
        删除成员 (分割文本, n, )
        跳出循环 ()
    .如果结束

.计次循环尾 ()
.计次循环首 (取数组成员数 (分割文本), n)
    .如果 (寻找文本 (分割文本 [n], “OFFSET:”, , 假) ＝ -1)

    .否则
        完成文本 ＝ 子文本替换 (分割文本 [n], “OFFSET:”, , , , 真)
        MP3OFFSET ＝ 到小数 (完成文本)
        删除成员 (分割文本, n, )
        跳出循环 ()
    .如果结束

.计次循环尾 ()


重定义数组 (高潮判定, 假, 0)
普面起始位置 ＝ 寻找文本 (配置文件, “#START”, , 假) ＋ 7
普面终止位置 ＝ 寻找文本 (配置文件, “#END”, , 假) ＋ 4
共计行数 ＝ 普面终止位置 － 普面起始位置
普面信息 ＝ 普面信息 ＋ 取文本中间 (配置文件, 普面起始位置, 共计行数) ＋ #换行符
调试输出 (普面信息)
分割文本 ＝ 分割文本 (删全部空 (普面信息), #换行符, )
.计次循环首 (取数组成员数 (分割文本), n)
    .如果 (取文本左边 (分割文本 [n], 1) ＝ “#”)
        .判断开始 (分割文本 [n] ＝ “#GOGOSTART”)
            加入成员 (高潮分组, 分割文本 [n])
        .判断 (分割文本 [n] ＝ “#GOGOEND”)
            加入成员 (高潮分组, 分割文本 [n])
        .默认

        .判断结束

    .否则
        加入成员 (高潮分组, 分割文本 [n])
    .如果结束

.计次循环尾 ()

.计次循环首 (取数组成员数 (高潮分组), n)
    .如果 (分割文本 [n] ＝ “#GOGOSTART”)
        临时高潮.开关 ＝ 真
        临时高潮.时间 ＝ 进度转时间 (60 ÷ MP3的BPM × 高潮序列 × 4 － MP3OFFSET)
        调试输出 (临时高潮.时间)
        加入成员 (高潮判定, 临时高潮)
    .否则
        .如果 (分割文本 [n] ＝ “#GOGOEND”)
            临时高潮.开关 ＝ 假
            临时高潮.时间 ＝ 进度转时间 (60 ÷ MP3的BPM × 高潮序列 × 4 － MP3OFFSET)
            加入成员 (高潮判定, 临时高潮)
        .否则
            高潮序列 ＝ 高潮序列 ＋ 1
        .如果结束

    .如果结束

.计次循环尾 ()
高潮开关 ＝ 0
歌曲文件名 ＝ 名称
.如果 (歌手名称 ＝ “”)
    SONG名称 ＝ “未知歌手”
.否则
    SONG名称 ＝ 歌手名称
.如果结束
BASS_StreamFree (播放句柄)
播放句柄 ＝ BASS_StreamCreateFile (假, mp3配置文件 ＋ 超级列表框3.取标题 (播放音乐, 0), 0, 0, 40000)
歌曲最大长度 ＝ 取整 (BASS_ChannelBytes2Seconds (播放句柄, BASS_ChannelGetLength (播放句柄, 0)))
mp3秒 ＝ 歌曲最大长度 ％ 60
MP3分 ＝ 歌曲最大长度 ＼ 60
BASS_ChannelPlay (播放句柄, 假)
.如果 (首次播放 ＝ 0)
    首次播放 ＝ 1
    BASS_ChannelSetPosition (播放句柄, BASS_ChannelSeconds2Bytes (播放句柄, 歌曲最大长度 × 0.75), 0)
.否则

.如果结束
音乐播放判断 ＝ 0
闪烁模式 ＝ 2

.子程序 遮罩切换播放

播放MP3音乐 (2)

.子程序 音乐初始化
.局部变量 数据, 文本型
.局部变量 分割数据, 文本型, , "0"
.局部变量 i, 整数型
.局部变量 分割, 文本型, , "0"
.局部变量 子目录, 文本型, , "0"
.局部变量 索引, 整数型

重定义数组 (子目录, 假, 0)
文件名 ＝ 寻找文件 (取运行目录 () ＋ “\Songs\*”, 16)
数据 ＝ 到文本 (读入文件 (文件名))
分割数据 ＝ 分割文本 (数据, #换行符, )
超级列表框3.全部删除 ()
.判断循环首 (文件名 ≠ “”)
    文件名 ＝ 寻找文件 (, 16)
    .如果真 (文件名 ≠ “”)
        .如果真 (文件名 ≠ “.” 且 文件名 ≠ “..”)
            加入成员 (子目录, 文件名)
        .如果真结束

    .如果真结束

.判断循环尾 ()
.计次循环首 (取数组成员数 (子目录), i)
    文件名 ＝ 寻找文件 (取运行目录 () ＋ “\Songs\” ＋ 子目录 [i] ＋ “\*.mp3”, )
    .判断循环首 (文件名 ≠ “”)
        .如果真 (文件名 ≠ “”)
            索引 ＝ 超级列表框3.插入表项 (0, 文件名, , , , )
            超级列表框3.置标题 (索引, 1, 子目录 [i])
        .如果真结束
        文件名 ＝ 寻找文件 (, )
    .判断循环尾 ()
    文件名 ＝ 寻找文件 (取运行目录 () ＋ “\Songs\” ＋ 子目录 [i] ＋ “\*.ogg”, )
    .判断循环首 (文件名 ≠ “”)
        .如果真 (文件名 ≠ “”)
            索引 ＝ 超级列表框3.插入表项 (0, 文件名, , , , )
            超级列表框3.置标题 (索引, 1, 子目录 [i])
        .如果真结束
        文件名 ＝ 寻找文件 (, )
    .判断循环尾 ()

.计次循环尾 ()
音乐总数 ＝ 超级列表框3.取表项数 ()

.子程序 _时钟1_周期事件
.局部变量 a, 文本型, 静态
.局部变量 b, 文本型
.局部变量 ddd, 文本型
.局部变量 sss, 文本型
.局部变量 编号, 整数型
.局部变量 ccc, 文本型
.局部变量 毫秒, 小数型
.局部变量 ccc2, 文本型
.局部变量 n, 整数型

.如果真 (BASS_ChannelGetLength (播放句柄, 0) ＝ BASS_ChannelGetPosition (播放句柄, 0))
    播放MP3音乐 (1)
.如果真结束
时钟5.时钟周期 ＝ 60000 ÷ MP3的BPM
MP3进度 ＝ BASS_ChannelBytes2Seconds (播放句柄, BASS_ChannelGetPosition (播放句柄, 0))
时间毫秒 ＝ 进度转毫秒 (BASS_ChannelBytes2Seconds (播放句柄, BASS_ChannelGetPosition (播放句柄, 0)))
MP3进度时间高潮 ＝ 进度转时间 (MP3进度)
当前播放时间 ＝ 进度转时间无毫秒 (MP3进度)
分钟 ＝ 进度转分 (MP3进度)
秒钟 ＝ 进度转秒 (MP3进度)
ddd ＝ 读配置项 (mp3配置文件, “Bpm”, 进度转时间无毫秒 (MP3进度), )
.如果 (到整数 (ddd) ＝ 0)

.否则
    MP3的BPM ＝ 到整数 (ddd)
.如果结束

sss ＝ 读配置项 (mp3配置文件, “Flicker”, 进度转时间无毫秒 (MP3进度), )
.如果 (到整数 (sss) ＝ 1)
    闪烁模式 ＝ 1
.否则

.如果结束
.如果 (到整数 (sss) ＝ 2)
    闪烁模式 ＝ 2
.否则

.如果结束
.计次循环首 (取数组成员数 (高潮判定), n)
    .如果 (高潮判定 [n].时间 ＝ MP3进度时间高潮)
        .如果真 (高潮判定 [n].开关 ＝ 真)
            高潮开关 ＝ 1
        .如果真结束
        .如果真 (高潮判定 [n].开关 ＝ 假)
            高潮开关 ＝ 0
        .如果真结束

    .否则

    .如果结束

.计次循环尾 ()

.子程序 _时钟5_周期事件

.如果 (当前窗口 ＝ “UI”)
    logo缩放 ＝ 1120
    残影缩放 ＝ 1050
    UI圆 ()
    .如果 (音乐播放判断 ＝ 1)
        残影透明度 ＝ 40
    .否则
        残影透明度 ＝ 50
    .如果结束
    .如果 (音乐播放判断 ＝ 0)
        .如果 (高潮开关 ＝ 1)
            .如果 (左右变量 ＝ “右”)
                左右变量 ＝ “左”
            .否则
                左右变量 ＝ “右”
            .如果结束
            .如果 (左右变量 ＝ “右”)
                闪烁右透明度 ＝ 255
            .否则

            .如果结束
            .如果 (左右变量 ＝ “左”)
                闪烁左透明度 ＝ 255

            .否则

            .如果结束


        .否则

        .如果结束
        .如果真 (高潮开关 ＝ 1)
            LOGO亮透明度 ＝ 50
        .如果真结束

        .如果 (高潮开关 ＝ 0)
            .如果 (闪烁模式 ＝ 2)
                .如果 (拍数 ≥ 3)

                    闪烁右透明度 ＝ 200
                    闪烁左透明度 ＝ 200
                    拍数 ＝ 0

                .否则
                    拍数 ＝ 拍数 ＋ 1
                .如果结束

            .否则

            .如果结束
            .如果 (闪烁模式 ＝ 1)
                .如果 (拍数 ≥ 1)
                    闪烁右透明度 ＝ 200
                    闪烁左透明度 ＝ 200
                    拍数 ＝ 0


                .否则
                    拍数 ＝ 拍数 ＋ 1
                .如果结束

            .否则

            .如果结束

        .否则

        .如果结束

    .否则

    .如果结束

.否则

.如果结束



.子程序 _窗口1_可否被关闭, 逻辑型

窗口1.可视 ＝ 假
返回 (假)

.子程序 _超级列表框3_表项被激活

播放音乐 ＝ 超级列表框3.现行选中项 － 1
播放MP3音乐 ()
窗口1.可视 ＝ 假

